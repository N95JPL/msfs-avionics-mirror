"use strict";(self.webpackChunkdocs_api=self.webpackChunkdocs_api||[]).push([[3545],{3905:function(e,n,t){t.d(n,{Zo:function(){return c},kt:function(){return f}});var r=t(7294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var p=r.createContext({}),s=function(e){var n=r.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},c=function(e){var n=s(e.components);return r.createElement(p.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},u=r.forwardRef((function(e,n){var t=e.components,i=e.mdxType,a=e.originalType,p=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),u=s(t),f=i,g=u["".concat(p,".").concat(f)]||u[f]||d[f]||a;return t?r.createElement(g,l(l({ref:n},c),{},{components:t})):r.createElement(g,l({ref:n},c))}));function f(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var a=t.length,l=new Array(a);l[0]=u;var o={};for(var p in n)hasOwnProperty.call(n,p)&&(o[p]=n[p]);o.originalType=e,o.mdxType="string"==typeof e?e:i,l[1]=o;for(var s=2;s<a;s++)l[s]=t[s];return r.createElement.apply(null,l)}return r.createElement.apply(null,t)}u.displayName="MDXCreateElement"},9412:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return o},contentTitle:function(){return p},metadata:function(){return s},toc:function(){return c},default:function(){return u}});var r=t(7462),i=t(3366),a=(t(7294),t(3905)),l=["components"],o={id:"FlightPlanOriginDestEvent",title:"Interface: FlightPlanOriginDestEvent",sidebar_label:"FlightPlanOriginDestEvent",sidebar_position:0,custom_edit_url:null},p=void 0,s={unversionedId:"framework/interfaces/FlightPlanOriginDestEvent",id:"framework/interfaces/FlightPlanOriginDestEvent",isDocsHomePage:!1,title:"Interface: FlightPlanOriginDestEvent",description:"An event generated when the origin and/or destination information",source:"@site/docs/framework/interfaces/FlightPlanOriginDestEvent.md",sourceDirName:"framework/interfaces",slug:"/framework/interfaces/FlightPlanOriginDestEvent",permalink:"/msfs-avionics-mirror/docs/framework/interfaces/FlightPlanOriginDestEvent",editUrl:null,tags:[],version:"current",sidebarPosition:0,frontMatter:{id:"FlightPlanOriginDestEvent",title:"Interface: FlightPlanOriginDestEvent",sidebar_label:"FlightPlanOriginDestEvent",sidebar_position:0,custom_edit_url:null},sidebar:"docsSidebar",previous:{title:"FlightPlannerEvents",permalink:"/msfs-avionics-mirror/docs/framework/interfaces/FlightPlannerEvents"},next:{title:"FlightPlanProcedureDetailsEvent",permalink:"/msfs-avionics-mirror/docs/framework/interfaces/FlightPlanProcedureDetailsEvent"}},c=[{value:"Properties",id:"properties",children:[{value:"airport",id:"airport",children:[{value:"Defined in",id:"defined-in",children:[],level:4}],level:3},{value:"planIndex",id:"planindex",children:[{value:"Defined in",id:"defined-in-1",children:[],level:4}],level:3},{value:"type",id:"type",children:[{value:"Defined in",id:"defined-in-2",children:[],level:4}],level:3}],level:2}],d={toc:c};function u(e){var n=e.components,t=(0,i.Z)(e,l);return(0,a.kt)("wrapper",(0,r.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"An event generated when the origin and/or destination information\nis updated."),(0,a.kt)("h2",{id:"properties"},"Properties"),(0,a.kt)("h3",{id:"airport"},"airport"),(0,a.kt)("p",null,"\u2022 ",(0,a.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,a.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,a.kt)("strong",{parentName:"p"},"airport"),": ",(0,a.kt)("inlineCode",{parentName:"p"},"string")),(0,a.kt)("p",null,"The airport that was changed."),(0,a.kt)("h4",{id:"defined-in"},"Defined in"),(0,a.kt)("p",null,"src/sdk/flightplan/FlightPlanner.ts:140"),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"planindex"},"planIndex"),(0,a.kt)("p",null,"\u2022 ",(0,a.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,a.kt)("strong",{parentName:"p"},"planIndex"),": ",(0,a.kt)("inlineCode",{parentName:"p"},"number")),(0,a.kt)("p",null,"The index of the flight plan."),(0,a.kt)("h4",{id:"defined-in-1"},"Defined in"),(0,a.kt)("p",null,"src/sdk/flightplan/FlightPlanner.ts:137"),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"type"},"type"),(0,a.kt)("p",null,"\u2022 ",(0,a.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,a.kt)("strong",{parentName:"p"},"type"),": ",(0,a.kt)("a",{parentName:"p",href:"../enums/OriginDestChangeType"},(0,a.kt)("inlineCode",{parentName:"a"},"OriginDestChangeType"))),(0,a.kt)("p",null,"The type of change."),(0,a.kt)("h4",{id:"defined-in-2"},"Defined in"),(0,a.kt)("p",null,"src/sdk/flightplan/FlightPlanner.ts:134"))}u.isMDXComponent=!0}}]);