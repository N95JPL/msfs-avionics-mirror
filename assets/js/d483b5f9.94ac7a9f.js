"use strict";(self.webpackChunkdocs_api=self.webpackChunkdocs_api||[]).push([[6848],{3905:function(e,n,t){t.d(n,{Zo:function(){return u},kt:function(){return h}});var i=t(7294);function l(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);n&&(i=i.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,i)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){l(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function d(e,n){if(null==e)return{};var t,i,l=function(e,n){if(null==e)return{};var t,i,l={},r=Object.keys(e);for(i=0;i<r.length;i++)t=r[i],n.indexOf(t)>=0||(l[t]=e[t]);return l}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(i=0;i<r.length;i++)t=r[i],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(l[t]=e[t])}return l}var s=i.createContext({}),o=function(e){var n=i.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},u=function(e){var n=o(e.components);return i.createElement(s.Provider,{value:n},e.children)},c={inlineCode:"code",wrapper:function(e){var n=e.children;return i.createElement(i.Fragment,{},n)}},p=i.forwardRef((function(e,n){var t=e.components,l=e.mdxType,r=e.originalType,s=e.parentName,u=d(e,["components","mdxType","originalType","parentName"]),p=o(t),h=l,f=p["".concat(s,".").concat(h)]||p[h]||c[h]||r;return t?i.createElement(f,a(a({ref:n},u),{},{components:t})):i.createElement(f,a({ref:n},u))}));function h(e,n){var t=arguments,l=n&&n.mdxType;if("string"==typeof e||l){var r=t.length,a=new Array(r);a[0]=p;var d={};for(var s in n)hasOwnProperty.call(n,s)&&(d[s]=n[s]);d.originalType=e,d.mdxType="string"==typeof e?e:l,a[1]=d;for(var o=2;o<r;o++)a[o]=t[o];return i.createElement.apply(null,a)}return i.createElement.apply(null,t)}p.displayName="MDXCreateElement"},3560:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return d},contentTitle:function(){return s},metadata:function(){return o},toc:function(){return u},default:function(){return p}});var i=t(7462),l=t(3366),r=(t(7294),t(3905)),a=["components"],d={id:"LegCalculations",title:"Interface: LegCalculations",sidebar_label:"LegCalculations",sidebar_position:0,custom_edit_url:null},s=void 0,o={unversionedId:"framework/interfaces/LegCalculations",id:"framework/interfaces/LegCalculations",isDocsHomePage:!1,title:"Interface: LegCalculations",description:"Metadata about a particular flight plan leg.",source:"@site/docs/framework/interfaces/LegCalculations.md",sourceDirName:"framework/interfaces",slug:"/framework/interfaces/LegCalculations",permalink:"/msfs-avionics-mirror/docs/framework/interfaces/LegCalculations",editUrl:null,tags:[],version:"current",sidebarPosition:0,frontMatter:{id:"LegCalculations",title:"Interface: LegCalculations",sidebar_label:"LegCalculations",sidebar_position:0,custom_edit_url:null},sidebar:"docsSidebar",previous:{title:"LatLonInterface",permalink:"/msfs-avionics-mirror/docs/framework/interfaces/LatLonInterface"},next:{title:"LegDefinition",permalink:"/msfs-avionics-mirror/docs/framework/interfaces/LegDefinition"}},u=[{value:"Properties",id:"properties",children:[{value:"cumulativeDistance",id:"cumulativedistance",children:[{value:"Defined in",id:"defined-in",children:[],level:4}],level:3},{value:"cumulativeDistanceWithTransitions",id:"cumulativedistancewithtransitions",children:[{value:"Defined in",id:"defined-in-1",children:[],level:4}],level:3},{value:"distance",id:"distance",children:[{value:"Defined in",id:"defined-in-2",children:[],level:4}],level:3},{value:"distanceWithTransitions",id:"distancewithtransitions",children:[{value:"Defined in",id:"defined-in-3",children:[],level:4}],level:3},{value:"egress",id:"egress",children:[{value:"Defined in",id:"defined-in-4",children:[],level:4}],level:3},{value:"egressJoinIndex",id:"egressjoinindex",children:[{value:"Defined in",id:"defined-in-5",children:[],level:4}],level:3},{value:"endLat",id:"endlat",children:[{value:"Defined in",id:"defined-in-6",children:[],level:4}],level:3},{value:"endLon",id:"endlon",children:[{value:"Defined in",id:"defined-in-7",children:[],level:4}],level:3},{value:"flightPath",id:"flightpath",children:[{value:"Defined in",id:"defined-in-8",children:[],level:4}],level:3},{value:"ingress",id:"ingress",children:[{value:"Defined in",id:"defined-in-9",children:[],level:4}],level:3},{value:"ingressJoinIndex",id:"ingressjoinindex",children:[{value:"Defined in",id:"defined-in-10",children:[],level:4}],level:3},{value:"ingressToEgress",id:"ingresstoegress",children:[{value:"Defined in",id:"defined-in-11",children:[],level:4}],level:3},{value:"initialDtk",id:"initialdtk",children:[{value:"Defined in",id:"defined-in-12",children:[],level:4}],level:3},{value:"startLat",id:"startlat",children:[{value:"Defined in",id:"defined-in-13",children:[],level:4}],level:3},{value:"startLon",id:"startlon",children:[{value:"Defined in",id:"defined-in-14",children:[],level:4}],level:3}],level:2}],c={toc:u};function p(e){var n=e.components,t=(0,l.Z)(e,a);return(0,r.kt)("wrapper",(0,i.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Metadata about a particular flight plan leg."),(0,r.kt)("h2",{id:"properties"},"Properties"),(0,r.kt)("h3",{id:"cumulativedistance"},"cumulativeDistance"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("strong",{parentName:"p"},"cumulativeDistance"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"number")),(0,r.kt)("p",null,"The cumulative distance in meters up to this point in the flight plan."),(0,r.kt)("h4",{id:"defined-in"},"Defined in"),(0,r.kt)("p",null,"src/sdk/flightplan/FlightPlanning.ts:170"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"cumulativedistancewithtransitions"},"cumulativeDistanceWithTransitions"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("strong",{parentName:"p"},"cumulativeDistanceWithTransitions"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"number")),(0,r.kt)("p",null,"The cumulative distance in meters up to this point, with leg transition turns taken into account."),(0,r.kt)("h4",{id:"defined-in-1"},"Defined in"),(0,r.kt)("p",null,"src/sdk/flightplan/FlightPlanning.ts:176"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"distance"},"distance"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("strong",{parentName:"p"},"distance"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"number")),(0,r.kt)("p",null,"The leg's total distance in meters, not cut short by ingress/egress turn radii."),(0,r.kt)("h4",{id:"defined-in-2"},"Defined in"),(0,r.kt)("p",null,"src/sdk/flightplan/FlightPlanning.ts:167"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"distancewithtransitions"},"distanceWithTransitions"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("strong",{parentName:"p"},"distanceWithTransitions"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"number")),(0,r.kt)("p",null,"The leg's total distance in meters, with leg transition turns take into account."),(0,r.kt)("h4",{id:"defined-in-3"},"Defined in"),(0,r.kt)("p",null,"src/sdk/flightplan/FlightPlanning.ts:173"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"egress"},"egress"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("strong",{parentName:"p"},"egress"),": ",(0,r.kt)("a",{parentName:"p",href:"CircleVector"},(0,r.kt)("inlineCode",{parentName:"a"},"CircleVector")),"[]"),(0,r.kt)("p",null,"The leg's flight path egress transition."),(0,r.kt)("h4",{id:"defined-in-4"},"Defined in"),(0,r.kt)("p",null,"src/sdk/flightplan/FlightPlanning.ts:206"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"egressjoinindex"},"egressJoinIndex"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("strong",{parentName:"p"},"egressJoinIndex"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"number")),(0,r.kt)("p",null,"The index of the flight path vector in ",(0,r.kt)("inlineCode",{parentName:"p"},"flightPath")," to which the egress transition is joined."),(0,r.kt)("h4",{id:"defined-in-5"},"Defined in"),(0,r.kt)("p",null,"src/sdk/flightplan/FlightPlanning.ts:203"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"endlat"},"endLat"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("strong",{parentName:"p"},"endLat"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"undefined")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},"number")),(0,r.kt)("p",null,"The latitude of the end of the leg."),(0,r.kt)("h4",{id:"defined-in-6"},"Defined in"),(0,r.kt)("p",null,"src/sdk/flightplan/FlightPlanning.ts:185"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"endlon"},"endLon"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("strong",{parentName:"p"},"endLon"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"undefined")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},"number")),(0,r.kt)("p",null,"The longitude of the end of the leg."),(0,r.kt)("h4",{id:"defined-in-7"},"Defined in"),(0,r.kt)("p",null,"src/sdk/flightplan/FlightPlanning.ts:188"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"flightpath"},"flightPath"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("strong",{parentName:"p"},"flightPath"),": ",(0,r.kt)("a",{parentName:"p",href:"CircleVector"},(0,r.kt)("inlineCode",{parentName:"a"},"CircleVector")),"[]"),(0,r.kt)("p",null,"The calculated flight path for the leg."),(0,r.kt)("h4",{id:"defined-in-8"},"Defined in"),(0,r.kt)("p",null,"src/sdk/flightplan/FlightPlanning.ts:191"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"ingress"},"ingress"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("strong",{parentName:"p"},"ingress"),": ",(0,r.kt)("a",{parentName:"p",href:"CircleVector"},(0,r.kt)("inlineCode",{parentName:"a"},"CircleVector")),"[]"),(0,r.kt)("p",null,"The leg's flight path ingress transition."),(0,r.kt)("h4",{id:"defined-in-9"},"Defined in"),(0,r.kt)("p",null,"src/sdk/flightplan/FlightPlanning.ts:194"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"ingressjoinindex"},"ingressJoinIndex"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("strong",{parentName:"p"},"ingressJoinIndex"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"number")),(0,r.kt)("p",null,"The index of the flight path vector in ",(0,r.kt)("inlineCode",{parentName:"p"},"flightPath")," to which the ingress transition is joined."),(0,r.kt)("h4",{id:"defined-in-10"},"Defined in"),(0,r.kt)("p",null,"src/sdk/flightplan/FlightPlanning.ts:197"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"ingresstoegress"},"ingressToEgress"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("strong",{parentName:"p"},"ingressToEgress"),": ",(0,r.kt)("a",{parentName:"p",href:"CircleVector"},(0,r.kt)("inlineCode",{parentName:"a"},"CircleVector")),"[]"),(0,r.kt)("p",null,"The leg's flight path between the ingress and egress transitions."),(0,r.kt)("h4",{id:"defined-in-11"},"Defined in"),(0,r.kt)("p",null,"src/sdk/flightplan/FlightPlanning.ts:200"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"initialdtk"},"initialDtk"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("strong",{parentName:"p"},"initialDtk"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"undefined")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},"number")),(0,r.kt)("p",null,"The initial DTK of the leg."),(0,r.kt)("h4",{id:"defined-in-12"},"Defined in"),(0,r.kt)("p",null,"src/sdk/flightplan/FlightPlanning.ts:164"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"startlat"},"startLat"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("strong",{parentName:"p"},"startLat"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"undefined")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},"number")),(0,r.kt)("p",null,"The latitude of the start of the leg."),(0,r.kt)("h4",{id:"defined-in-13"},"Defined in"),(0,r.kt)("p",null,"src/sdk/flightplan/FlightPlanning.ts:179"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"startlon"},"startLon"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("strong",{parentName:"p"},"startLon"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"undefined")," ","|"," ",(0,r.kt)("inlineCode",{parentName:"p"},"number")),(0,r.kt)("p",null,"The longitude of the start of the leg."),(0,r.kt)("h4",{id:"defined-in-14"},"Defined in"),(0,r.kt)("p",null,"src/sdk/flightplan/FlightPlanning.ts:182"))}p.isMDXComponent=!0}}]);