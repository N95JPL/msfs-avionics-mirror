"use strict";(self.webpackChunkdocs_api=self.webpackChunkdocs_api||[]).push([[9922],{3905:function(e,t,n){n.d(t,{Zo:function(){return s},kt:function(){return f}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=r.createContext({}),m=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},s=function(e){var t=m(e.components);return r.createElement(p.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},g=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,p=e.parentName,s=o(e,["components","mdxType","originalType","parentName"]),g=m(n),f=a,c=g["".concat(p,".").concat(f)]||g[f]||d[f]||i;return n?r.createElement(c,l(l({ref:t},s),{},{components:n})):r.createElement(c,l({ref:t},s))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,l=new Array(i);l[0]=g;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o.mdxType="string"==typeof e?e:a,l[1]=o;for(var m=2;m<i;m++)l[m]=n[m];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}g.displayName="MDXCreateElement"},3706:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return o},contentTitle:function(){return p},metadata:function(){return m},toc:function(){return s},default:function(){return g}});var r=n(7462),a=n(3366),i=(n(7294),n(3905)),l=["components"],o={id:"FlightPlanSegment",title:"Class: FlightPlanSegment",sidebar_label:"FlightPlanSegment",sidebar_position:0,custom_edit_url:null},p=void 0,m={unversionedId:"framework/classes/FlightPlanSegment",id:"framework/classes/FlightPlanSegment",isDocsHomePage:!1,title:"Class: FlightPlanSegment",description:"A segment of a flight plan.",source:"@site/docs/framework/classes/FlightPlanSegment.md",sourceDirName:"framework/classes",slug:"/framework/classes/FlightPlanSegment",permalink:"/msfs-avionics-mirror/docs/framework/classes/FlightPlanSegment",editUrl:null,tags:[],version:"current",sidebarPosition:0,frontMatter:{id:"FlightPlanSegment",title:"Class: FlightPlanSegment",sidebar_label:"FlightPlanSegment",sidebar_position:0,custom_edit_url:null},sidebar:"docsSidebar",previous:{title:"FlightPlanner",permalink:"/msfs-avionics-mirror/docs/framework/classes/FlightPlanner"},next:{title:"GeoCircle",permalink:"/msfs-avionics-mirror/docs/framework/classes/GeoCircle"}},s=[{value:"Constructors",id:"constructors",children:[{value:"constructor",id:"constructor",children:[{value:"Parameters",id:"parameters",children:[],level:4},{value:"Defined in",id:"defined-in",children:[],level:4}],level:3}],level:2},{value:"Properties",id:"properties",children:[{value:"airway",id:"airway",children:[],level:3},{value:"legs",id:"legs",children:[],level:3},{value:"offset",id:"offset",children:[],level:3},{value:"segmentIndex",id:"segmentindex",children:[],level:3},{value:"segmentType",id:"segmenttype",children:[],level:3},{value:"Empty",id:"empty",children:[{value:"Defined in",id:"defined-in-1",children:[],level:4}],level:3}],level:2}],d={toc:s};function g(e){var t=e.components,n=(0,a.Z)(e,l);return(0,i.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"A segment of a flight plan."),(0,i.kt)("h2",{id:"constructors"},"Constructors"),(0,i.kt)("h3",{id:"constructor"},"constructor"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("strong",{parentName:"p"},"new FlightPlanSegment"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"segmentIndex"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"offset"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"legs"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"segmentType?"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"airway?"),")"),(0,i.kt)("p",null,"Creates a new FlightPlanSegment."),(0,i.kt)("h4",{id:"parameters"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Default value"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"segmentIndex")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"undefined")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The index of the segment within the flight plan.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"offset")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"undefined")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The leg offset within the original flight plan that the segment starts at.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"legs")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"../interfaces/LegDefinition"},(0,i.kt)("inlineCode",{parentName:"a"},"LegDefinition")),"[]"),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"undefined")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The legs in the flight plan segment.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"segmentType")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"../enums/FlightPlanSegmentType"},(0,i.kt)("inlineCode",{parentName:"a"},"FlightPlanSegmentType"))),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"FlightPlanSegmentType.Enroute")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The type of segment this is.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"airway?")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"string")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"undefined")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The airway associated with this segment, if any.")))),(0,i.kt)("h4",{id:"defined-in"},"Defined in"),(0,i.kt)("p",null,"src/sdk/flightplan/FlightPlanning.ts:150"),(0,i.kt)("h2",{id:"properties"},"Properties"),(0,i.kt)("h3",{id:"airway"},"airway"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,i.kt)("strong",{parentName:"p"},"airway"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"string")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"legs"},"legs"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("strong",{parentName:"p"},"legs"),": ",(0,i.kt)("a",{parentName:"p",href:"../interfaces/LegDefinition"},(0,i.kt)("inlineCode",{parentName:"a"},"LegDefinition")),"[]"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"offset"},"offset"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("strong",{parentName:"p"},"offset"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"number")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"segmentindex"},"segmentIndex"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("strong",{parentName:"p"},"segmentIndex"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"number")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"segmenttype"},"segmentType"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("strong",{parentName:"p"},"segmentType"),": ",(0,i.kt)("a",{parentName:"p",href:"../enums/FlightPlanSegmentType"},(0,i.kt)("inlineCode",{parentName:"a"},"FlightPlanSegmentType"))," = ",(0,i.kt)("inlineCode",{parentName:"p"},"FlightPlanSegmentType.Enroute")),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"empty"},"Empty"),(0,i.kt)("p",null,"\u25aa ",(0,i.kt)("inlineCode",{parentName:"p"},"Static")," ",(0,i.kt)("strong",{parentName:"p"},"Empty"),": ",(0,i.kt)("a",{parentName:"p",href:"FlightPlanSegment"},(0,i.kt)("inlineCode",{parentName:"a"},"FlightPlanSegment"))),(0,i.kt)("p",null,"An empty flight plan segment."),(0,i.kt)("h4",{id:"defined-in-1"},"Defined in"),(0,i.kt)("p",null,"src/sdk/flightplan/FlightPlanning.ts:155"))}g.isMDXComponent=!0}}]);