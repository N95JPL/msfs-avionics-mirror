"use strict";(self.webpackChunkdocs_api=self.webpackChunkdocs_api||[]).push([[1338],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return m}});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var u=r.createContext({}),s=function(e){var t=r.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=s(e.components);return r.createElement(u.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,u=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=s(n),m=i,f=d["".concat(u,".").concat(m)]||d[m]||c[m]||a;return n?r.createElement(f,o(o({ref:t},p),{},{components:n})):r.createElement(f,o({ref:t},p))}));function m(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,o=new Array(a);o[0]=d;var l={};for(var u in t)hasOwnProperty.call(t,u)&&(l[u]=t[u]);l.originalType=e,l.mdxType="string"==typeof e?e:i,o[1]=l;for(var s=2;s<a;s++)o[s]=n[s];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},5474:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return l},contentTitle:function(){return u},metadata:function(){return s},toc:function(){return p},default:function(){return d}});var r=n(7462),i=n(3366),a=(n(7294),n(3905)),o=["components"],l={id:"AirwayStatus",title:"Enumeration: AirwayStatus",sidebar_label:"AirwayStatus",sidebar_position:0,custom_edit_url:null},u=void 0,s={unversionedId:"framework/enums/AirwayStatus",id:"framework/enums/AirwayStatus",isDocsHomePage:!1,title:"Enumeration: AirwayStatus",description:"WT Airway Status Enum",source:"@site/docs/framework/enums/AirwayStatus.md",sourceDirName:"framework/enums",slug:"/framework/enums/AirwayStatus",permalink:"/msfs-avionics-mirror/docs/framework/enums/AirwayStatus",editUrl:null,tags:[],version:"current",sidebarPosition:0,frontMatter:{id:"AirwayStatus",title:"Enumeration: AirwayStatus",sidebar_label:"AirwayStatus",sidebar_position:0,custom_edit_url:null},sidebar:"docsSidebar",previous:{title:"AirspaceType",permalink:"/msfs-avionics-mirror/docs/framework/enums/AirspaceType"},next:{title:"AirwayType",permalink:"/msfs-avionics-mirror/docs/framework/enums/AirwayType"}},p=[{value:"Enumeration members",id:"enumeration-members",children:[{value:"COMPLETE",id:"complete",children:[{value:"Defined in",id:"defined-in",children:[],level:4}],level:3},{value:"INCOMPLETE",id:"incomplete",children:[{value:"Defined in",id:"defined-in-1",children:[],level:4}],level:3},{value:"PARTIAL",id:"partial",children:[{value:"Defined in",id:"defined-in-2",children:[],level:4}],level:3}],level:2}],c={toc:p};function d(e){var t=e.components,n=(0,i.Z)(e,o);return(0,a.kt)("wrapper",(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"WT Airway Status Enum"),(0,a.kt)("h2",{id:"enumeration-members"},"Enumeration members"),(0,a.kt)("h3",{id:"complete"},"COMPLETE"),(0,a.kt)("p",null,"\u2022 ",(0,a.kt)("strong",{parentName:"p"},"COMPLETE")," = ",(0,a.kt)("inlineCode",{parentName:"p"},"1")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("inlineCode",{parentName:"strong"},"readonly"))),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("inlineCode",{parentName:"strong"},"property"))," {number} COMPLETE - indicates all waypoints have been successfully loaded."),(0,a.kt)("h4",{id:"defined-in"},"Defined in"),(0,a.kt)("p",null,"src/sdk/navigation/FacilityLoader.ts:606"),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"incomplete"},"INCOMPLETE"),(0,a.kt)("p",null,"\u2022 ",(0,a.kt)("strong",{parentName:"p"},"INCOMPLETE")," = ",(0,a.kt)("inlineCode",{parentName:"p"},"0")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("inlineCode",{parentName:"strong"},"readonly"))),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("inlineCode",{parentName:"strong"},"property"))," {number} INCOMPLETE - indicates waypoints have not been loaded yet."),(0,a.kt)("h4",{id:"defined-in-1"},"Defined in"),(0,a.kt)("p",null,"src/sdk/navigation/FacilityLoader.ts:601"),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"partial"},"PARTIAL"),(0,a.kt)("p",null,"\u2022 ",(0,a.kt)("strong",{parentName:"p"},"PARTIAL")," = ",(0,a.kt)("inlineCode",{parentName:"p"},"2")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("inlineCode",{parentName:"strong"},"readonly"))),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("inlineCode",{parentName:"strong"},"property"))," {number} PARTIAL - indicates some, but not all, waypoints have been successfully loaded."),(0,a.kt)("h4",{id:"defined-in-2"},"Defined in"),(0,a.kt)("p",null,"src/sdk/navigation/FacilityLoader.ts:611"))}d.isMDXComponent=!0}}]);