"use strict";(self.webpackChunkdocs_api=self.webpackChunkdocs_api||[]).push([[7792],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return k}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=r.createContext({}),d=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=d(e.components);return r.createElement(p.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,p=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=d(n),k=a,m=u["".concat(p,".").concat(k)]||u[k]||s[k]||i;return n?r.createElement(m,o(o({ref:t},c),{},{components:n})):r.createElement(m,o({ref:t},c))}));function k(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=u;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l.mdxType="string"==typeof e?e:a,o[1]=l;for(var d=2;d<i;d++)o[d]=n[d];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},7615:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return l},contentTitle:function(){return p},metadata:function(){return d},toc:function(){return c},default:function(){return u}});var r=n(7462),a=n(3366),i=(n(7294),n(3905)),o=["components"],l={id:"GeoProjection",title:"Interface: GeoProjection",sidebar_label:"GeoProjection",sidebar_position:0,custom_edit_url:null},p=void 0,d={unversionedId:"framework/interfaces/GeoProjection",id:"framework/interfaces/GeoProjection",isDocsHomePage:!1,title:"Interface: GeoProjection",description:"A geographic projection.",source:"@site/docs/framework/interfaces/GeoProjection.md",sourceDirName:"framework/interfaces",slug:"/framework/interfaces/GeoProjection",permalink:"/msfs-avionics-mirror/docs/framework/interfaces/GeoProjection",editUrl:null,tags:[],version:"current",sidebarPosition:0,frontMatter:{id:"GeoProjection",title:"Interface: GeoProjection",sidebar_label:"GeoProjection",sidebar_position:0,custom_edit_url:null},sidebar:"docsSidebar",previous:{title:"GeoPointInterface",permalink:"/msfs-avionics-mirror/docs/framework/interfaces/GeoPointInterface"},next:{title:"GNSSEvents",permalink:"/msfs-avionics-mirror/docs/framework/interfaces/GNSSEvents"}},c=[{value:"Hierarchy",id:"hierarchy",children:[],level:2},{value:"Methods",id:"methods",children:[{value:"getCenter",id:"getcenter",children:[{value:"Returns",id:"returns",children:[],level:4},{value:"Defined in",id:"defined-in",children:[],level:4}],level:3},{value:"getPostRotation",id:"getpostrotation",children:[{value:"Returns",id:"returns-1",children:[],level:4},{value:"Defined in",id:"defined-in-1",children:[],level:4}],level:3},{value:"getPreRotation",id:"getprerotation",children:[{value:"Returns",id:"returns-2",children:[],level:4},{value:"Defined in",id:"defined-in-2",children:[],level:4}],level:3},{value:"getReflectY",id:"getreflecty",children:[{value:"Returns",id:"returns-3",children:[],level:4},{value:"Defined in",id:"defined-in-3",children:[],level:4}],level:3},{value:"getScaleFactor",id:"getscalefactor",children:[{value:"Returns",id:"returns-4",children:[],level:4},{value:"Defined in",id:"defined-in-4",children:[],level:4}],level:3},{value:"getTranslation",id:"gettranslation",children:[{value:"Returns",id:"returns-5",children:[],level:4},{value:"Defined in",id:"defined-in-5",children:[],level:4}],level:3},{value:"invert",id:"invert",children:[{value:"Type parameters",id:"type-parameters",children:[],level:4},{value:"Parameters",id:"parameters",children:[],level:4},{value:"Returns",id:"returns-6",children:[],level:4},{value:"Defined in",id:"defined-in-6",children:[],level:4}],level:3},{value:"project",id:"project",children:[{value:"Parameters",id:"parameters-1",children:[],level:4},{value:"Returns",id:"returns-7",children:[],level:4},{value:"Defined in",id:"defined-in-7",children:[],level:4}],level:3}],level:2}],s={toc:c};function u(e){var t=e.components,n=(0,a.Z)(e,o);return(0,i.kt)("wrapper",(0,r.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"A geographic projection."),(0,i.kt)("h2",{id:"hierarchy"},"Hierarchy"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"GeoProjection"))),(0,i.kt)("p",{parentName:"li"},"\u21b3 ",(0,i.kt)("a",{parentName:"p",href:"MutableGeoProjection"},(0,i.kt)("inlineCode",{parentName:"a"},"MutableGeoProjection"))))),(0,i.kt)("h2",{id:"methods"},"Methods"),(0,i.kt)("h3",{id:"getcenter"},"getCenter"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"getCenter"),"(): ",(0,i.kt)("a",{parentName:"p",href:"../classes/GeoPointReadOnly"},(0,i.kt)("inlineCode",{parentName:"a"},"GeoPointReadOnly"))),(0,i.kt)("p",null,"Gets the geographic center of this projection."),(0,i.kt)("h4",{id:"returns"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"../classes/GeoPointReadOnly"},(0,i.kt)("inlineCode",{parentName:"a"},"GeoPointReadOnly"))),(0,i.kt)("p",null,"the geographic center of this projection."),(0,i.kt)("h4",{id:"defined-in"},"Defined in"),(0,i.kt)("p",null,"src/sdk/utils/geo/GeoProjection.ts:14"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"getpostrotation"},"getPostRotation"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"getPostRotation"),"(): ",(0,i.kt)("inlineCode",{parentName:"p"},"number")),(0,i.kt)("p",null,"Gets the post-projection (planar) rotation angle of this projection in radians."),(0,i.kt)("h4",{id:"returns-1"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"number")),(0,i.kt)("p",null,"the post-projection rotation angle of this projection."),(0,i.kt)("h4",{id:"defined-in-1"},"Defined in"),(0,i.kt)("p",null,"src/sdk/utils/geo/GeoProjection.ts:40"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"getprerotation"},"getPreRotation"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"getPreRotation"),"(): ",(0,i.kt)("inlineCode",{parentName:"p"},"Float64Array")),(0,i.kt)("p",null,"Gets the pre-projection rotation of this projection as a vector (","[lambda, phi]","). The rotation angles are\nexpressed in radians."),(0,i.kt)("h4",{id:"returns-2"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Float64Array")),(0,i.kt)("p",null,"the pre-projection rotation of this projection."),(0,i.kt)("h4",{id:"defined-in-2"},"Defined in"),(0,i.kt)("p",null,"src/sdk/utils/geo/GeoProjection.ts:28"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"getreflecty"},"getReflectY"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"getReflectY"),"(): ",(0,i.kt)("inlineCode",{parentName:"p"},"boolean")),(0,i.kt)("p",null,"Checks whether this projection reflects the projected coordinate system across the x-axis."),(0,i.kt)("h4",{id:"returns-3"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"boolean")),(0,i.kt)("p",null,"whether this projection reflects the projected coordinate system across the x-axis."),(0,i.kt)("h4",{id:"defined-in-3"},"Defined in"),(0,i.kt)("p",null,"src/sdk/utils/geo/GeoProjection.ts:46"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"getscalefactor"},"getScaleFactor"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"getScaleFactor"),"(): ",(0,i.kt)("inlineCode",{parentName:"p"},"number")),(0,i.kt)("p",null,"Gets the nominal scale factor of this projection. At a scale factor of 1, a distance of one great-arc radian will\nbe projected to a distance of one pixel."),(0,i.kt)("h4",{id:"returns-4"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"number")),(0,i.kt)("p",null,"the nominal scale factor of this projection."),(0,i.kt)("h4",{id:"defined-in-4"},"Defined in"),(0,i.kt)("p",null,"src/sdk/utils/geo/GeoProjection.ts:21"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"gettranslation"},"getTranslation"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"getTranslation"),"(): ",(0,i.kt)("inlineCode",{parentName:"p"},"Float64Array")),(0,i.kt)("p",null,"Gets the post-projection (planar) translation of this projection, in pixels."),(0,i.kt)("h4",{id:"returns-5"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Float64Array")),(0,i.kt)("p",null,"the post-projection translation of this projection."),(0,i.kt)("h4",{id:"defined-in-5"},"Defined in"),(0,i.kt)("p",null,"src/sdk/utils/geo/GeoProjection.ts:34"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"invert"},"invert"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"invert"),"<",(0,i.kt)("inlineCode",{parentName:"p"},"T"),">","(",(0,i.kt)("inlineCode",{parentName:"p"},"vec"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"out"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"T")),(0,i.kt)("p",null,"Inverts a set of projected coordinates. This method will determine the geographic point whose projected location\nis the equal to that described by a 2D position vector."),(0,i.kt)("h4",{id:"type-parameters"},"Type parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"T")),(0,i.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,i.kt)("a",{parentName:"td",href:"../classes/GeoPoint"},(0,i.kt)("inlineCode",{parentName:"a"},"GeoPoint"))," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},"Float64Array"))))),(0,i.kt)("h4",{id:"parameters"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"vec")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"Float64Array")),(0,i.kt)("td",{parentName:"tr",align:"left"},"the 2D position vector describing the location of the projected coordinates.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"out")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"T")),(0,i.kt)("td",{parentName:"tr",align:"left"},"the point to which to write the result.")))),(0,i.kt)("h4",{id:"returns-6"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"T")),(0,i.kt)("p",null,"the inverted point."),(0,i.kt)("h4",{id:"defined-in-6"},"Defined in"),(0,i.kt)("p",null,"src/sdk/utils/geo/GeoProjection.ts:63"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"project"},"project"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"project"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"point"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"out"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"Float64Array")),(0,i.kt)("p",null,"Projects a set of lat/lon coordinates."),(0,i.kt)("h4",{id:"parameters-1"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"point")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"LatLonInterface"},(0,i.kt)("inlineCode",{parentName:"a"},"LatLonInterface"))," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},"Float64Array")),(0,i.kt)("td",{parentName:"tr",align:"left"},"the point to project.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"out")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"Float64Array")),(0,i.kt)("td",{parentName:"tr",align:"left"},"the vector to which to write the result.")))),(0,i.kt)("h4",{id:"returns-7"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Float64Array")),(0,i.kt)("p",null,"the projected point, as a vector."),(0,i.kt)("h4",{id:"defined-in-7"},"Defined in"),(0,i.kt)("p",null,"src/sdk/utils/geo/GeoProjection.ts:54"))}u.isMDXComponent=!0}}]);