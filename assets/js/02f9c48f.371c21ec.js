"use strict";(self.webpackChunkdocs_api=self.webpackChunkdocs_api||[]).push([[4095],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return f}});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},l=Object.keys(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var c=r.createContext({}),u=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},p=function(e){var t=u(e.components);return r.createElement(c.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,l=e.originalType,c=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),d=u(n),f=i,h=d["".concat(c,".").concat(f)]||d[f]||s[f]||l;return n?r.createElement(h,a(a({ref:t},p),{},{components:n})):r.createElement(h,a({ref:t},p))}));function f(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var l=n.length,a=new Array(l);a[0]=d;var o={};for(var c in t)hasOwnProperty.call(t,c)&&(o[c]=t[c]);o.originalType=e,o.mdxType="string"==typeof e?e:i,a[1]=o;for(var u=2;u<l;u++)a[u]=n[u];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},1146:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return o},contentTitle:function(){return c},metadata:function(){return u},toc:function(){return p},default:function(){return d}});var r=n(7462),i=n(3366),l=(n(7294),n(3905)),a=["components"],o={id:"FlightPathCalculatorOptions",title:"Interface: FlightPathCalculatorOptions",sidebar_label:"FlightPathCalculatorOptions",sidebar_position:0,custom_edit_url:null},c=void 0,u={unversionedId:"framework/interfaces/FlightPathCalculatorOptions",id:"framework/interfaces/FlightPathCalculatorOptions",isDocsHomePage:!1,title:"Interface: FlightPathCalculatorOptions",description:"Options for the flight path calculator.",source:"@site/docs/framework/interfaces/FlightPathCalculatorOptions.md",sourceDirName:"framework/interfaces",slug:"/framework/interfaces/FlightPathCalculatorOptions",permalink:"/msfs-avionics-mirror/docs/framework/interfaces/FlightPathCalculatorOptions",editUrl:null,tags:[],version:"current",sidebarPosition:0,frontMatter:{id:"FlightPathCalculatorOptions",title:"Interface: FlightPathCalculatorOptions",sidebar_label:"FlightPathCalculatorOptions",sidebar_position:0,custom_edit_url:null},sidebar:"docsSidebar",previous:{title:"FacilityFrequency",permalink:"/msfs-avionics-mirror/docs/framework/interfaces/FacilityFrequency"},next:{title:"FlightPathLegCalculator",permalink:"/msfs-avionics-mirror/docs/framework/interfaces/FlightPathLegCalculator"}},p=[{value:"Properties",id:"properties",children:[{value:"bankAngle",id:"bankangle",children:[{value:"Defined in",id:"defined-in",children:[],level:4}],level:3},{value:"defaultClimbRate",id:"defaultclimbrate",children:[{value:"Defined in",id:"defined-in-1",children:[],level:4}],level:3},{value:"defaultSpeed",id:"defaultspeed",children:[{value:"Defined in",id:"defined-in-2",children:[],level:4}],level:3}],level:2}],s={toc:p};function d(e){var t=e.components,n=(0,i.Z)(e,a);return(0,l.kt)("wrapper",(0,r.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"Options for the flight path calculator."),(0,l.kt)("h2",{id:"properties"},"Properties"),(0,l.kt)("h3",{id:"bankangle"},"bankAngle"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("strong",{parentName:"p"},"bankAngle"),": ",(0,l.kt)("inlineCode",{parentName:"p"},"number")),(0,l.kt)("p",null,"The bank angle with which to calculated turns."),(0,l.kt)("h4",{id:"defined-in"},"Defined in"),(0,l.kt)("p",null,"src/sdk/flightplan/FlightPathCalculator.ts:27"),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"defaultclimbrate"},"defaultClimbRate"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("strong",{parentName:"p"},"defaultClimbRate"),": ",(0,l.kt)("inlineCode",{parentName:"p"},"number")),(0,l.kt)("p",null,"The default climb rate, if the plane is not yet at flying speed."),(0,l.kt)("h4",{id:"defined-in-1"},"Defined in"),(0,l.kt)("p",null,"src/sdk/flightplan/FlightPathCalculator.ts:21"),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"defaultspeed"},"defaultSpeed"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("strong",{parentName:"p"},"defaultSpeed"),": ",(0,l.kt)("inlineCode",{parentName:"p"},"number")),(0,l.kt)("p",null,"The default speed, if the plane is not yet at flying speed."),(0,l.kt)("h4",{id:"defined-in-2"},"Defined in"),(0,l.kt)("p",null,"src/sdk/flightplan/FlightPathCalculator.ts:24"))}d.isMDXComponent=!0}}]);