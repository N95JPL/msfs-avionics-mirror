"use strict";(self.webpackChunkdocs_api=self.webpackChunkdocs_api||[]).push([[7017],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return u}});var i=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function d(e,t){if(null==e)return{};var n,i,a=function(e,t){if(null==e)return{};var n,i,a={},r=Object.keys(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=i.createContext({}),o=function(e){var t=i.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},c=function(e){var t=o(e.components);return i.createElement(p.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},m=i.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,p=e.parentName,c=d(e,["components","mdxType","originalType","parentName"]),m=o(n),u=a,k=m["".concat(p,".").concat(u)]||m[u]||s[u]||r;return n?i.createElement(k,l(l({ref:t},c),{},{components:n})):i.createElement(k,l({ref:t},c))}));function u(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,l=new Array(r);l[0]=m;var d={};for(var p in t)hasOwnProperty.call(t,p)&&(d[p]=t[p]);d.originalType=e,d.mdxType="string"==typeof e?e:a,l[1]=d;for(var o=2;o<r;o++)l[o]=n[o];return i.createElement.apply(null,l)}return i.createElement.apply(null,n)}m.displayName="MDXCreateElement"},1054:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return d},contentTitle:function(){return p},metadata:function(){return o},toc:function(){return c},default:function(){return m}});var i=n(7462),a=n(3366),r=(n(7294),n(3905)),l=["components"],d={id:"TCASIntruder",title:"Interface: TCASIntruder",sidebar_label:"TCASIntruder",sidebar_position:0,custom_edit_url:null},p=void 0,o={unversionedId:"framework/interfaces/TCASIntruder",id:"framework/interfaces/TCASIntruder",isDocsHomePage:!1,title:"Interface: TCASIntruder",description:"An intruder tracked by TCAS.",source:"@site/docs/framework/interfaces/TCASIntruder.md",sourceDirName:"framework/interfaces",slug:"/framework/interfaces/TCASIntruder",permalink:"/msfs-avionics-mirror/docs/framework/interfaces/TCASIntruder",editUrl:null,tags:[],version:"current",sidebarPosition:0,frontMatter:{id:"TCASIntruder",title:"Interface: TCASIntruder",sidebar_label:"TCASIntruder",sidebar_position:0,custom_edit_url:null},sidebar:"docsSidebar",previous:{title:"TCASEvents",permalink:"/msfs-avionics-mirror/docs/framework/interfaces/TCASEvents"},next:{title:"TCASSensitivity",permalink:"/msfs-avionics-mirror/docs/framework/interfaces/TCASSensitivity"}},c=[{value:"Implemented by",id:"implemented-by",children:[],level:2},{value:"Properties",id:"properties",children:[{value:"alertLevel",id:"alertlevel",children:[{value:"Defined in",id:"defined-in",children:[],level:4}],level:3},{value:"altitude",id:"altitude",children:[{value:"Defined in",id:"defined-in-1",children:[],level:4}],level:3},{value:"contact",id:"contact",children:[{value:"Defined in",id:"defined-in-2",children:[],level:4}],level:3},{value:"groundSpeed",id:"groundspeed",children:[{value:"Defined in",id:"defined-in-3",children:[],level:4}],level:3},{value:"groundTrack",id:"groundtrack",children:[{value:"Defined in",id:"defined-in-4",children:[],level:4}],level:3},{value:"isPredictionValid",id:"ispredictionvalid",children:[{value:"Defined in",id:"defined-in-5",children:[],level:4}],level:3},{value:"position",id:"position",children:[{value:"Defined in",id:"defined-in-6",children:[],level:4}],level:3},{value:"positionVec",id:"positionvec",children:[{value:"Defined in",id:"defined-in-7",children:[],level:4}],level:3},{value:"relativePositionVec",id:"relativepositionvec",children:[{value:"Defined in",id:"defined-in-8",children:[],level:4}],level:3},{value:"relativeVelocityVec",id:"relativevelocityvec",children:[{value:"Defined in",id:"defined-in-9",children:[],level:4}],level:3},{value:"tca",id:"tca",children:[{value:"Defined in",id:"defined-in-10",children:[],level:4}],level:3},{value:"tcaDisplacement",id:"tcadisplacement",children:[{value:"Defined in",id:"defined-in-11",children:[],level:4}],level:3},{value:"tcaHorizontalSep",id:"tcahorizontalsep",children:[{value:"Defined in",id:"defined-in-12",children:[],level:4}],level:3},{value:"tcaNorm",id:"tcanorm",children:[{value:"Defined in",id:"defined-in-13",children:[],level:4}],level:3},{value:"tcaVerticalSep",id:"tcaverticalsep",children:[{value:"Defined in",id:"defined-in-14",children:[],level:4}],level:3},{value:"velocityVec",id:"velocityvec",children:[{value:"Defined in",id:"defined-in-15",children:[],level:4}],level:3},{value:"verticalSpeed",id:"verticalspeed",children:[{value:"Defined in",id:"defined-in-16",children:[],level:4}],level:3}],level:2},{value:"Methods",id:"methods",children:[{value:"predictDisplacement",id:"predictdisplacement",children:[{value:"Parameters",id:"parameters",children:[],level:4},{value:"Returns",id:"returns",children:[],level:4},{value:"Defined in",id:"defined-in-17",children:[],level:4}],level:3},{value:"predictSeparation",id:"predictseparation",children:[{value:"Parameters",id:"parameters-1",children:[],level:4},{value:"Returns",id:"returns-1",children:[],level:4},{value:"Defined in",id:"defined-in-18",children:[],level:4}],level:3}],level:2}],s={toc:c};function m(e){var t=e.components,n=(0,a.Z)(e,l);return(0,r.kt)("wrapper",(0,i.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"An intruder tracked by TCAS."),(0,r.kt)("h2",{id:"implemented-by"},"Implemented by"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"../classes/AbstractTCASIntruder"},(0,r.kt)("inlineCode",{parentName:"a"},"AbstractTCASIntruder")))),(0,r.kt)("h2",{id:"properties"},"Properties"),(0,r.kt)("h3",{id:"alertlevel"},"alertLevel"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,r.kt)("strong",{parentName:"p"},"alertLevel"),": ",(0,r.kt)("a",{parentName:"p",href:"Subscribable"},(0,r.kt)("inlineCode",{parentName:"a"},"Subscribable")),"<",(0,r.kt)("a",{parentName:"p",href:"../enums/TCASAlertLevel"},(0,r.kt)("inlineCode",{parentName:"a"},"TCASAlertLevel")),">"),(0,r.kt)("p",null,"A subscribable which provides the alert level assigned to this intruder."),(0,r.kt)("h4",{id:"defined-in"},"Defined in"),(0,r.kt)("p",null,"src/sdk/traffic/TCAS.ts:40"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"altitude"},"altitude"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,r.kt)("strong",{parentName:"p"},"altitude"),": ",(0,r.kt)("a",{parentName:"p",href:"../classes/NumberUnitReadOnly"},(0,r.kt)("inlineCode",{parentName:"a"},"NumberUnitReadOnly")),"<",(0,r.kt)("a",{parentName:"p",href:"../enums/UnitFamily#distance"},(0,r.kt)("inlineCode",{parentName:"a"},"Distance")),", ",(0,r.kt)("a",{parentName:"p",href:"Unit"},(0,r.kt)("inlineCode",{parentName:"a"},"Unit")),"<",(0,r.kt)("a",{parentName:"p",href:"../enums/UnitFamily#distance"},(0,r.kt)("inlineCode",{parentName:"a"},"Distance")),">",">"),(0,r.kt)("p",null,"The altitude of this intruder at the time of the most recent update."),(0,r.kt)("h4",{id:"defined-in-1"},"Defined in"),(0,r.kt)("p",null,"src/sdk/traffic/TCAS.ts:46"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"contact"},"contact"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,r.kt)("strong",{parentName:"p"},"contact"),": ",(0,r.kt)("a",{parentName:"p",href:"TrafficContact"},(0,r.kt)("inlineCode",{parentName:"a"},"TrafficContact"))),(0,r.kt)("p",null,"The traffic contact associated with this intruder."),(0,r.kt)("h4",{id:"defined-in-2"},"Defined in"),(0,r.kt)("p",null,"src/sdk/traffic/TCAS.ts:37"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"groundspeed"},"groundSpeed"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,r.kt)("strong",{parentName:"p"},"groundSpeed"),": ",(0,r.kt)("a",{parentName:"p",href:"../classes/NumberUnitReadOnly"},(0,r.kt)("inlineCode",{parentName:"a"},"NumberUnitReadOnly")),"<",(0,r.kt)("a",{parentName:"p",href:"../enums/UnitFamily#speed"},(0,r.kt)("inlineCode",{parentName:"a"},"Speed")),", ",(0,r.kt)("a",{parentName:"p",href:"Unit"},(0,r.kt)("inlineCode",{parentName:"a"},"Unit")),"<",(0,r.kt)("a",{parentName:"p",href:"../enums/UnitFamily#speed"},(0,r.kt)("inlineCode",{parentName:"a"},"Speed")),">",">"),(0,r.kt)("p",null,"The ground speed of this intruder at the time of the most recent update."),(0,r.kt)("h4",{id:"defined-in-3"},"Defined in"),(0,r.kt)("p",null,"src/sdk/traffic/TCAS.ts:52"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"groundtrack"},"groundTrack"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,r.kt)("strong",{parentName:"p"},"groundTrack"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"number")),(0,r.kt)("p",null,"The true ground track of this intruder at the time of the most recent update."),(0,r.kt)("h4",{id:"defined-in-4"},"Defined in"),(0,r.kt)("p",null,"src/sdk/traffic/TCAS.ts:49"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"ispredictionvalid"},"isPredictionValid"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,r.kt)("strong",{parentName:"p"},"isPredictionValid"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"boolean")),(0,r.kt)("p",null,"Whether there is a valid prediction for time of closest approach between this intruder and own airplane."),(0,r.kt)("h4",{id:"defined-in-5"},"Defined in"),(0,r.kt)("p",null,"src/sdk/traffic/TCAS.ts:79"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"position"},"position"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,r.kt)("strong",{parentName:"p"},"position"),": ",(0,r.kt)("a",{parentName:"p",href:"../classes/GeoPointReadOnly"},(0,r.kt)("inlineCode",{parentName:"a"},"GeoPointReadOnly"))),(0,r.kt)("p",null,"The position of this intruder at the time of the most recent update."),(0,r.kt)("h4",{id:"defined-in-6"},"Defined in"),(0,r.kt)("p",null,"src/sdk/traffic/TCAS.ts:43"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"positionvec"},"positionVec"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,r.kt)("strong",{parentName:"p"},"positionVec"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"Float64Array")),(0,r.kt)("p",null,"The 3D position vector of this intruder at the time of the last update. Each component is expressed in units of\nmeters. The coordinate system is an Euclidean approximation of the geodetic space around the own airplane such\nthat the z-coordinate represents orthometric height and the x- and y-coordinates represent an east-\ncounterclockwise equirectangular projection of latitude and longitude, with the origin at the location of the own\nairplane."),(0,r.kt)("h4",{id:"defined-in-7"},"Defined in"),(0,r.kt)("p",null,"src/sdk/traffic/TCAS.ts:64"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"relativepositionvec"},"relativePositionVec"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,r.kt)("strong",{parentName:"p"},"relativePositionVec"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"Float64Array")),(0,r.kt)("p",null,"The 3D position vector of this intruder relative to own airplane."),(0,r.kt)("h4",{id:"defined-in-8"},"Defined in"),(0,r.kt)("p",null,"src/sdk/traffic/TCAS.ts:73"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"relativevelocityvec"},"relativeVelocityVec"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,r.kt)("strong",{parentName:"p"},"relativeVelocityVec"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"Float64Array")),(0,r.kt)("p",null,"The 3D velocity vector of this intruder relative to own airplane."),(0,r.kt)("h4",{id:"defined-in-9"},"Defined in"),(0,r.kt)("p",null,"src/sdk/traffic/TCAS.ts:76"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"tca"},"tca"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,r.kt)("strong",{parentName:"p"},"tca"),": ",(0,r.kt)("a",{parentName:"p",href:"../classes/NumberUnitReadOnly"},(0,r.kt)("inlineCode",{parentName:"a"},"NumberUnitReadOnly")),"<",(0,r.kt)("a",{parentName:"p",href:"../enums/UnitFamily#duration"},(0,r.kt)("inlineCode",{parentName:"a"},"Duration")),", ",(0,r.kt)("a",{parentName:"p",href:"Unit"},(0,r.kt)("inlineCode",{parentName:"a"},"Unit")),"<",(0,r.kt)("a",{parentName:"p",href:"../enums/UnitFamily#duration"},(0,r.kt)("inlineCode",{parentName:"a"},"Duration")),">",">"),(0,r.kt)("p",null,"The predicted time-of-closest-approach of this intruder at the time of the most recent update."),(0,r.kt)("h4",{id:"defined-in-10"},"Defined in"),(0,r.kt)("p",null,"src/sdk/traffic/TCAS.ts:82"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"tcadisplacement"},"tcaDisplacement"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,r.kt)("strong",{parentName:"p"},"tcaDisplacement"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"Float64Array")),(0,r.kt)("p",null,"The predicted 3D displacement vector from own airplane to this intruder at time of closest approach."),(0,r.kt)("h4",{id:"defined-in-11"},"Defined in"),(0,r.kt)("p",null,"src/sdk/traffic/TCAS.ts:85"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"tcahorizontalsep"},"tcaHorizontalSep"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,r.kt)("strong",{parentName:"p"},"tcaHorizontalSep"),": ",(0,r.kt)("a",{parentName:"p",href:"../classes/NumberUnitReadOnly"},(0,r.kt)("inlineCode",{parentName:"a"},"NumberUnitReadOnly")),"<",(0,r.kt)("a",{parentName:"p",href:"../enums/UnitFamily#distance"},(0,r.kt)("inlineCode",{parentName:"a"},"Distance")),", ",(0,r.kt)("a",{parentName:"p",href:"Unit"},(0,r.kt)("inlineCode",{parentName:"a"},"Unit")),"<",(0,r.kt)("a",{parentName:"p",href:"../enums/UnitFamily#distance"},(0,r.kt)("inlineCode",{parentName:"a"},"Distance")),">",">"),(0,r.kt)("p",null,"The predicted horizontal separation between this intruder and own airplane at time of closest approach."),(0,r.kt)("h4",{id:"defined-in-12"},"Defined in"),(0,r.kt)("p",null,"src/sdk/traffic/TCAS.ts:95"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"tcanorm"},"tcaNorm"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,r.kt)("strong",{parentName:"p"},"tcaNorm"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"number")),(0,r.kt)("p",null,"The cylindrical norm of the predicted displacement vector between this intruder and own airplane at time of\nclosest approach. A value less than or equal to 1 indicates the intruder will be inside the protected zone.\nLarger values correspond to greater separation."),(0,r.kt)("h4",{id:"defined-in-13"},"Defined in"),(0,r.kt)("p",null,"src/sdk/traffic/TCAS.ts:92"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"tcaverticalsep"},"tcaVerticalSep"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,r.kt)("strong",{parentName:"p"},"tcaVerticalSep"),": ",(0,r.kt)("a",{parentName:"p",href:"../classes/NumberUnitReadOnly"},(0,r.kt)("inlineCode",{parentName:"a"},"NumberUnitReadOnly")),"<",(0,r.kt)("a",{parentName:"p",href:"../enums/UnitFamily#distance"},(0,r.kt)("inlineCode",{parentName:"a"},"Distance")),", ",(0,r.kt)("a",{parentName:"p",href:"Unit"},(0,r.kt)("inlineCode",{parentName:"a"},"Unit")),"<",(0,r.kt)("a",{parentName:"p",href:"../enums/UnitFamily#distance"},(0,r.kt)("inlineCode",{parentName:"a"},"Distance")),">",">"),(0,r.kt)("p",null,"The predicted vertical separation between this intruder and own airplane at time of closest approach."),(0,r.kt)("h4",{id:"defined-in-14"},"Defined in"),(0,r.kt)("p",null,"src/sdk/traffic/TCAS.ts:98"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"velocityvec"},"velocityVec"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,r.kt)("strong",{parentName:"p"},"velocityVec"),": ",(0,r.kt)("inlineCode",{parentName:"p"},"Float64Array")),(0,r.kt)("p",null,"The 3D velocity vector of this intruder at the time of the last update. Each component is expressed in units of\nmeters per second. The coordinate system is defined the same as for position vectors."),(0,r.kt)("h4",{id:"defined-in-15"},"Defined in"),(0,r.kt)("p",null,"src/sdk/traffic/TCAS.ts:70"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"verticalspeed"},"verticalSpeed"),(0,r.kt)("p",null,"\u2022 ",(0,r.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,r.kt)("strong",{parentName:"p"},"verticalSpeed"),": ",(0,r.kt)("a",{parentName:"p",href:"../classes/NumberUnitReadOnly"},(0,r.kt)("inlineCode",{parentName:"a"},"NumberUnitReadOnly")),"<",(0,r.kt)("a",{parentName:"p",href:"../enums/UnitFamily#speed"},(0,r.kt)("inlineCode",{parentName:"a"},"Speed")),", ",(0,r.kt)("a",{parentName:"p",href:"Unit"},(0,r.kt)("inlineCode",{parentName:"a"},"Unit")),"<",(0,r.kt)("a",{parentName:"p",href:"../enums/UnitFamily#speed"},(0,r.kt)("inlineCode",{parentName:"a"},"Speed")),">",">"),(0,r.kt)("p",null,"The vertical speed of this intruder at the time of the most recent update."),(0,r.kt)("h4",{id:"defined-in-16"},"Defined in"),(0,r.kt)("p",null,"src/sdk/traffic/TCAS.ts:55"),(0,r.kt)("h2",{id:"methods"},"Methods"),(0,r.kt)("h3",{id:"predictdisplacement"},"predictDisplacement"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("strong",{parentName:"p"},"predictDisplacement"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"simTime"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"out"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"Float64Array")),(0,r.kt)("p",null,"Calculates the predicted 3D displacement vector from own airplane to this intruder at a specified time based on\nthe most recent available data. If insufficient data is available to calculate the prediction, NaN will be written\nto the result."),(0,r.kt)("h4",{id:"parameters"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"simTime")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The sim time at which to calculate the separation, as a UNIX timestamp.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"out")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"Float64Array")),(0,r.kt)("td",{parentName:"tr",align:"left"},"A Float64Array object to which to write the result.")))),(0,r.kt)("h4",{id:"returns"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"Float64Array")),(0,r.kt)("p",null,"the predicted displacement vector from own airplane to this intruder at the specified time."),(0,r.kt)("h4",{id:"defined-in-17"},"Defined in"),(0,r.kt)("p",null,"src/sdk/traffic/TCAS.ts:108"),(0,r.kt)("hr",null),(0,r.kt)("h3",{id:"predictseparation"},"predictSeparation"),(0,r.kt)("p",null,"\u25b8 ",(0,r.kt)("strong",{parentName:"p"},"predictSeparation"),"(",(0,r.kt)("inlineCode",{parentName:"p"},"simTime"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"horizontalOut"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"verticalOut"),"): ",(0,r.kt)("inlineCode",{parentName:"p"},"void")),(0,r.kt)("p",null,"Calculates the predicted separation between this intruder and own airplane at a specified time based on the most\nrecent available data and stores the results in the supplied WT_NumberUnit objects. If insufficient data is\navailable to calculate the prediction, NaN will be written to the results."),(0,r.kt)("h4",{id:"parameters-1"},"Parameters"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"simTime")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"number")),(0,r.kt)("td",{parentName:"tr",align:"left"},"The sim time at which to calculate the separation, as a UNIX timestamp.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"horizontalOut")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"../classes/NumberUnit"},(0,r.kt)("inlineCode",{parentName:"a"},"NumberUnit")),"<",(0,r.kt)("a",{parentName:"td",href:"../enums/UnitFamily#distance"},(0,r.kt)("inlineCode",{parentName:"a"},"Distance")),", ",(0,r.kt)("a",{parentName:"td",href:"Unit"},(0,r.kt)("inlineCode",{parentName:"a"},"Unit")),"<",(0,r.kt)("a",{parentName:"td",href:"../enums/UnitFamily#distance"},(0,r.kt)("inlineCode",{parentName:"a"},"Distance")),">",">"),(0,r.kt)("td",{parentName:"tr",align:"left"},"A NumberUnit object to which to write the horizontal separation.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("inlineCode",{parentName:"td"},"verticalOut")),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("a",{parentName:"td",href:"../classes/NumberUnit"},(0,r.kt)("inlineCode",{parentName:"a"},"NumberUnit")),"<",(0,r.kt)("a",{parentName:"td",href:"../enums/UnitFamily#distance"},(0,r.kt)("inlineCode",{parentName:"a"},"Distance")),", ",(0,r.kt)("a",{parentName:"td",href:"Unit"},(0,r.kt)("inlineCode",{parentName:"a"},"Unit")),"<",(0,r.kt)("a",{parentName:"td",href:"../enums/UnitFamily#distance"},(0,r.kt)("inlineCode",{parentName:"a"},"Distance")),">",">"),(0,r.kt)("td",{parentName:"tr",align:"left"},"A NumberUnit object to which to write the vertical separation.")))),(0,r.kt)("h4",{id:"returns-1"},"Returns"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"void")),(0,r.kt)("h4",{id:"defined-in-18"},"Defined in"),(0,r.kt)("p",null,"src/sdk/traffic/TCAS.ts:118"))}m.isMDXComponent=!0}}]);