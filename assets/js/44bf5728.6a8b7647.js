"use strict";(self.webpackChunkdocs_api=self.webpackChunkdocs_api||[]).push([[6867],{3905:function(e,t,n){n.d(t,{Zo:function(){return k},kt:function(){return c}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function d(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var o=a.createContext({}),p=function(e){var t=a.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},k=function(e){var t=p(e.components);return a.createElement(o.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},s=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,o=e.parentName,k=d(e,["components","mdxType","originalType","parentName"]),s=p(n),c=r,N=s["".concat(o,".").concat(c)]||s[c]||m[c]||i;return n?a.createElement(N,l(l({ref:t},k),{},{components:n})):a.createElement(N,l({ref:t},k))}));function c(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,l=new Array(i);l[0]=s;var d={};for(var o in t)hasOwnProperty.call(t,o)&&(d[o]=t[o]);d.originalType=e,d.mdxType="string"==typeof e?e:r,l[1]=d;for(var p=2;p<i;p++)l[p]=n[p];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}s.displayName="MDXCreateElement"},8338:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return d},contentTitle:function(){return o},metadata:function(){return p},toc:function(){return k},default:function(){return s}});var a=n(7462),r=n(3366),i=(n(7294),n(3905)),l=["components"],d={id:"GeoCircle",title:"Class: GeoCircle",sidebar_label:"GeoCircle",sidebar_position:0,custom_edit_url:null},o=void 0,p={unversionedId:"framework/classes/GeoCircle",id:"framework/classes/GeoCircle",isDocsHomePage:!1,title:"Class: GeoCircle",description:"A circle on Earth's surface, defined as the set of points on the Earth's surface equidistant (as measured",source:"@site/docs/framework/classes/GeoCircle.md",sourceDirName:"framework/classes",slug:"/framework/classes/GeoCircle",permalink:"/msfs-avionics-mirror/docs/framework/classes/GeoCircle",editUrl:null,tags:[],version:"current",sidebarPosition:0,frontMatter:{id:"GeoCircle",title:"Class: GeoCircle",sidebar_label:"GeoCircle",sidebar_position:0,custom_edit_url:null},sidebar:"docsSidebar",previous:{title:"FlightPlanSegment",permalink:"/msfs-avionics-mirror/docs/framework/classes/FlightPlanSegment"},next:{title:"GeodesicResampler",permalink:"/msfs-avionics-mirror/docs/framework/classes/GeodesicResampler"}},k=[{value:"Constructors",id:"constructors",children:[{value:"constructor",id:"constructor",children:[{value:"Parameters",id:"parameters",children:[],level:4},{value:"Defined in",id:"defined-in",children:[],level:4}],level:3}],level:2},{value:"Properties",id:"properties",children:[{value:"_center",id:"_center",children:[{value:"Defined in",id:"defined-in-1",children:[],level:4}],level:3},{value:"_radius",id:"_radius",children:[{value:"Defined in",id:"defined-in-2",children:[],level:4}],level:3},{value:"ANGULAR_TOLERANCE",id:"angular_tolerance",children:[{value:"Defined in",id:"defined-in-3",children:[],level:4}],level:3},{value:"NORTH_POLE",id:"north_pole",children:[{value:"Defined in",id:"defined-in-4",children:[],level:4}],level:3},{value:"intersectionCache",id:"intersectioncache",children:[{value:"Defined in",id:"defined-in-5",children:[],level:4}],level:3},{value:"tempGeoPoint",id:"tempgeopoint",children:[{value:"Defined in",id:"defined-in-6",children:[],level:4}],level:3},{value:"vec3Cache",id:"vec3cache",children:[{value:"Defined in",id:"defined-in-7",children:[],level:4}],level:3}],level:2},{value:"Accessors",id:"accessors",children:[{value:"center",id:"center",children:[{value:"Returns",id:"returns",children:[],level:4},{value:"Defined in",id:"defined-in-8",children:[],level:4}],level:3},{value:"radius",id:"radius",children:[{value:"Returns",id:"returns-1",children:[],level:4},{value:"Defined in",id:"defined-in-9",children:[],level:4}],level:3}],level:2},{value:"Methods",id:"methods",children:[{value:"_offsetAngleAlong",id:"_offsetanglealong",children:[{value:"Parameters",id:"parameters-1",children:[],level:4},{value:"Returns",id:"returns-2",children:[],level:4},{value:"Defined in",id:"defined-in-10",children:[],level:4}],level:3},{value:"angleAlong",id:"anglealong",children:[{value:"Parameters",id:"parameters-2",children:[],level:4},{value:"Returns",id:"returns-3",children:[],level:4},{value:"Defined in",id:"defined-in-11",children:[],level:4}],level:3},{value:"arcLength",id:"arclength",children:[{value:"Parameters",id:"parameters-3",children:[],level:4},{value:"Returns",id:"returns-4",children:[],level:4},{value:"Defined in",id:"defined-in-12",children:[],level:4}],level:3},{value:"bearingAt",id:"bearingat",children:[{value:"Parameters",id:"parameters-4",children:[],level:4},{value:"Returns",id:"returns-5",children:[],level:4},{value:"Defined in",id:"defined-in-13",children:[],level:4}],level:3},{value:"closest",id:"closest",children:[{value:"Parameters",id:"parameters-5",children:[],level:4},{value:"Returns",id:"returns-6",children:[],level:4},{value:"Defined in",id:"defined-in-14",children:[],level:4},{value:"Parameters",id:"parameters-6",children:[],level:4},{value:"Returns",id:"returns-7",children:[],level:4},{value:"Defined in",id:"defined-in-15",children:[],level:4}],level:3},{value:"distance",id:"distance",children:[{value:"Parameters",id:"parameters-7",children:[],level:4},{value:"Returns",id:"returns-8",children:[],level:4},{value:"Defined in",id:"defined-in-16",children:[],level:4}],level:3},{value:"distanceAlong",id:"distancealong",children:[{value:"Parameters",id:"parameters-8",children:[],level:4},{value:"Returns",id:"returns-9",children:[],level:4},{value:"Defined in",id:"defined-in-17",children:[],level:4}],level:3},{value:"distanceToCenter",id:"distancetocenter",children:[{value:"Parameters",id:"parameters-9",children:[],level:4},{value:"Returns",id:"returns-10",children:[],level:4},{value:"Defined in",id:"defined-in-18",children:[],level:4}],level:3},{value:"encircles",id:"encircles",children:[{value:"Parameters",id:"parameters-10",children:[],level:4},{value:"Returns",id:"returns-11",children:[],level:4},{value:"Defined in",id:"defined-in-19",children:[],level:4}],level:3},{value:"includes",id:"includes",children:[{value:"Parameters",id:"parameters-11",children:[],level:4},{value:"Returns",id:"returns-12",children:[],level:4},{value:"Defined in",id:"defined-in-20",children:[],level:4}],level:3},{value:"intersection",id:"intersection",children:[{value:"Parameters",id:"parameters-12",children:[],level:4},{value:"Returns",id:"returns-13",children:[],level:4},{value:"Defined in",id:"defined-in-21",children:[],level:4}],level:3},{value:"intersectionGeoPoint",id:"intersectiongeopoint",children:[{value:"Parameters",id:"parameters-13",children:[],level:4},{value:"Returns",id:"returns-14",children:[],level:4},{value:"Defined in",id:"defined-in-22",children:[],level:4}],level:3},{value:"isGreatCircle",id:"isgreatcircle",children:[{value:"Returns",id:"returns-15",children:[],level:4},{value:"Defined in",id:"defined-in-23",children:[],level:4}],level:3},{value:"numIntersectionPoints",id:"numintersectionpoints",children:[{value:"Parameters",id:"parameters-14",children:[],level:4},{value:"Returns",id:"returns-16",children:[],level:4},{value:"Defined in",id:"defined-in-24",children:[],level:4}],level:3},{value:"offsetAngleAlong",id:"offsetanglealong",children:[{value:"Parameters",id:"parameters-15",children:[],level:4},{value:"Returns",id:"returns-17",children:[],level:4},{value:"Defined in",id:"defined-in-25",children:[],level:4},{value:"Parameters",id:"parameters-16",children:[],level:4},{value:"Returns",id:"returns-18",children:[],level:4},{value:"Defined in",id:"defined-in-26",children:[],level:4}],level:3},{value:"offsetDistanceAlong",id:"offsetdistancealong",children:[{value:"Parameters",id:"parameters-17",children:[],level:4},{value:"Returns",id:"returns-19",children:[],level:4},{value:"Defined in",id:"defined-in-27",children:[],level:4},{value:"Parameters",id:"parameters-18",children:[],level:4},{value:"Returns",id:"returns-20",children:[],level:4},{value:"Defined in",id:"defined-in-28",children:[],level:4}],level:3},{value:"set",id:"set",children:[{value:"Parameters",id:"parameters-19",children:[],level:4},{value:"Returns",id:"returns-21",children:[],level:4},{value:"Defined in",id:"defined-in-29",children:[],level:4}],level:3},{value:"setAsGreatCircle",id:"setasgreatcircle",children:[{value:"Parameters",id:"parameters-20",children:[],level:4},{value:"Returns",id:"returns-22",children:[],level:4},{value:"Defined in",id:"defined-in-30",children:[],level:4},{value:"Parameters",id:"parameters-21",children:[],level:4},{value:"Returns",id:"returns-23",children:[],level:4},{value:"Defined in",id:"defined-in-31",children:[],level:4}],level:3},{value:"_getGreatCircleNormal",id:"_getgreatcirclenormal",children:[{value:"Parameters",id:"parameters-22",children:[],level:4},{value:"Returns",id:"returns-24",children:[],level:4},{value:"Defined in",id:"defined-in-32",children:[],level:4}],level:3},{value:"createFromPoint",id:"createfrompoint",children:[{value:"Parameters",id:"parameters-23",children:[],level:4},{value:"Returns",id:"returns-25",children:[],level:4},{value:"Defined in",id:"defined-in-33",children:[],level:4}],level:3},{value:"createGreatCircle",id:"creategreatcircle",children:[{value:"Parameters",id:"parameters-24",children:[],level:4},{value:"Returns",id:"returns-26",children:[],level:4},{value:"Defined in",id:"defined-in-34",children:[],level:4},{value:"Parameters",id:"parameters-25",children:[],level:4},{value:"Returns",id:"returns-27",children:[],level:4},{value:"Defined in",id:"defined-in-35",children:[],level:4}],level:3},{value:"createGreatCircleFromPointBearing",id:"creategreatcirclefrompointbearing",children:[{value:"Parameters",id:"parameters-26",children:[],level:4},{value:"Returns",id:"returns-28",children:[],level:4},{value:"Defined in",id:"defined-in-36",children:[],level:4}],level:3},{value:"getGreatCircleNormal",id:"getgreatcirclenormal",children:[{value:"Parameters",id:"parameters-27",children:[],level:4},{value:"Returns",id:"returns-29",children:[],level:4},{value:"Defined in",id:"defined-in-37",children:[],level:4},{value:"Parameters",id:"parameters-28",children:[],level:4},{value:"Returns",id:"returns-30",children:[],level:4},{value:"Defined in",id:"defined-in-38",children:[],level:4}],level:3},{value:"getGreatCircleNormalFromPointBearing",id:"getgreatcirclenormalfrompointbearing",children:[{value:"Parameters",id:"parameters-29",children:[],level:4},{value:"Returns",id:"returns-31",children:[],level:4},{value:"Defined in",id:"defined-in-39",children:[],level:4}],level:3},{value:"getGreatCircleNormalFromPoints",id:"getgreatcirclenormalfrompoints",children:[{value:"Parameters",id:"parameters-30",children:[],level:4},{value:"Returns",id:"returns-32",children:[],level:4},{value:"Defined in",id:"defined-in-40",children:[],level:4}],level:3}],level:2}],m={toc:k};function s(e){var t=e.components,n=(0,r.Z)(e,l);return(0,i.kt)("wrapper",(0,a.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"A circle on Earth's surface, defined as the set of points on the Earth's surface equidistant (as measured\ngeodetically) from a central point."),(0,i.kt)("h2",{id:"constructors"},"Constructors"),(0,i.kt)("h3",{id:"constructor"},"constructor"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("strong",{parentName:"p"},"new GeoCircle"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"center"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"radius"),")"),(0,i.kt)("p",null,"Constructor."),(0,i.kt)("h4",{id:"parameters"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"center")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"Float64Array")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The center of the new small circle, represented as a position vector in the standard geographic cartesian reference system.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"radius")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The radius of the new small circle in great-arc radians.")))),(0,i.kt)("h4",{id:"defined-in"},"Defined in"),(0,i.kt)("p",null,"src/sdk/utils/geo/GeoCircle.ts:27"),(0,i.kt)("h2",{id:"properties"},"Properties"),(0,i.kt)("h3",{id:"_center"},"_","center"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,i.kt)("strong",{parentName:"p"},"_","center"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"Float64Array")),(0,i.kt)("h4",{id:"defined-in-1"},"Defined in"),(0,i.kt)("p",null,"src/sdk/utils/geo/GeoCircle.ts:18"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"_radius"},"_","radius"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,i.kt)("strong",{parentName:"p"},"_","radius"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"number")," = ",(0,i.kt)("inlineCode",{parentName:"p"},"0")),(0,i.kt)("h4",{id:"defined-in-2"},"Defined in"),(0,i.kt)("p",null,"src/sdk/utils/geo/GeoCircle.ts:19"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"angular_tolerance"},"ANGULAR","_","TOLERANCE"),(0,i.kt)("p",null,"\u25aa ",(0,i.kt)("inlineCode",{parentName:"p"},"Static")," ",(0,i.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,i.kt)("strong",{parentName:"p"},"ANGULAR","_","TOLERANCE"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"1e-7")),(0,i.kt)("h4",{id:"defined-in-3"},"Defined in"),(0,i.kt)("p",null,"src/sdk/utils/geo/GeoCircle.ts:10"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"north_pole"},"NORTH","_","POLE"),(0,i.kt)("p",null,"\u25aa ",(0,i.kt)("inlineCode",{parentName:"p"},"Static")," ",(0,i.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,i.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,i.kt)("strong",{parentName:"p"},"NORTH","_","POLE"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"Float64Array")),(0,i.kt)("h4",{id:"defined-in-4"},"Defined in"),(0,i.kt)("p",null,"src/sdk/utils/geo/GeoCircle.ts:12"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"intersectioncache"},"intersectionCache"),(0,i.kt)("p",null,"\u25aa ",(0,i.kt)("inlineCode",{parentName:"p"},"Static")," ",(0,i.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,i.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,i.kt)("strong",{parentName:"p"},"intersectionCache"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"Float64Array"),"[]"),(0,i.kt)("h4",{id:"defined-in-5"},"Defined in"),(0,i.kt)("p",null,"src/sdk/utils/geo/GeoCircle.ts:16"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"tempgeopoint"},"tempGeoPoint"),(0,i.kt)("p",null,"\u25aa ",(0,i.kt)("inlineCode",{parentName:"p"},"Static")," ",(0,i.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,i.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,i.kt)("strong",{parentName:"p"},"tempGeoPoint"),": ",(0,i.kt)("a",{parentName:"p",href:"GeoPoint"},(0,i.kt)("inlineCode",{parentName:"a"},"GeoPoint"))),(0,i.kt)("h4",{id:"defined-in-6"},"Defined in"),(0,i.kt)("p",null,"src/sdk/utils/geo/GeoCircle.ts:14"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"vec3cache"},"vec3Cache"),(0,i.kt)("p",null,"\u25aa ",(0,i.kt)("inlineCode",{parentName:"p"},"Static")," ",(0,i.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,i.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,i.kt)("strong",{parentName:"p"},"vec3Cache"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"Float64Array"),"[]"),(0,i.kt)("h4",{id:"defined-in-7"},"Defined in"),(0,i.kt)("p",null,"src/sdk/utils/geo/GeoCircle.ts:15"),(0,i.kt)("h2",{id:"accessors"},"Accessors"),(0,i.kt)("h3",{id:"center"},"center"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"get")," ",(0,i.kt)("strong",{parentName:"p"},"center"),"(): ",(0,i.kt)("inlineCode",{parentName:"p"},"Float64Array")),(0,i.kt)("p",null,"The center of this circle."),(0,i.kt)("h4",{id:"returns"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Float64Array")),(0,i.kt)("h4",{id:"defined-in-8"},"Defined in"),(0,i.kt)("p",null,"src/sdk/utils/geo/GeoCircle.ts:35"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"radius"},"radius"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"get")," ",(0,i.kt)("strong",{parentName:"p"},"radius"),"(): ",(0,i.kt)("inlineCode",{parentName:"p"},"number")),(0,i.kt)("p",null,"The radius of this circle, in great-arc radians."),(0,i.kt)("h4",{id:"returns-1"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"number")),(0,i.kt)("h4",{id:"defined-in-9"},"Defined in"),(0,i.kt)("p",null,"src/sdk/utils/geo/GeoCircle.ts:43"),(0,i.kt)("h2",{id:"methods"},"Methods"),(0,i.kt)("h3",{id:"_offsetanglealong"},"_","offsetAngleAlong"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,i.kt)("strong",{parentName:"p"},"_offsetAngleAlong"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"point"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"angle"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"out"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"tolerance?"),"): ",(0,i.kt)("a",{parentName:"p",href:"GeoPoint"},(0,i.kt)("inlineCode",{parentName:"a"},"GeoPoint"))," ","|"," ",(0,i.kt)("inlineCode",{parentName:"p"},"Float64Array")),(0,i.kt)("p",null,"Offsets a point on this circle by a specified angular distance. The direction of the offset for positive distances\nis counterclockwise when viewed from above the center of this circle."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"throws"))," Error if the point does not lie on this circle."),(0,i.kt)("h4",{id:"parameters-1"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Default value"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"point")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"../interfaces/LatLonInterface"},(0,i.kt)("inlineCode",{parentName:"a"},"LatLonInterface"))," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},"Float64Array")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"undefined")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The point to offset.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"angle")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"undefined")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The angular distance by which to offset, in radians.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"out")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"GeoPoint"},(0,i.kt)("inlineCode",{parentName:"a"},"GeoPoint"))," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},"Float64Array")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"undefined")),(0,i.kt)("td",{parentName:"tr",align:"left"},"A Float64Array or GeoPoint object to which to write the result.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"tolerance")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"GeoCircle.ANGULAR_TOLERANCE")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The error tolerance, in great-arc radians, when checking if ",(0,i.kt)("inlineCode",{parentName:"td"},"point")," lies on this circle. Defaults to ",(0,i.kt)("inlineCode",{parentName:"td"},"GeoCircle.ANGULAR_TOLERANCE")," if not specified.")))),(0,i.kt)("h4",{id:"returns-2"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"GeoPoint"},(0,i.kt)("inlineCode",{parentName:"a"},"GeoPoint"))," ","|"," ",(0,i.kt)("inlineCode",{parentName:"p"},"Float64Array")),(0,i.kt)("p",null,"The offset point."),(0,i.kt)("h4",{id:"defined-in-10"},"Defined in"),(0,i.kt)("p",null,"src/sdk/utils/geo/GeoCircle.ts:368"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"anglealong"},"angleAlong"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"angleAlong"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"start"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"end"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"tolerance?"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"number")),(0,i.kt)("p",null,"Gets the angular distance along an arc between two points that lie on this circle. The arc extends from the first\npoint to the second in a counterclockwise direction when viewed from above the center of the circle."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"throws"))," Error if either point does not lie on this circle."),(0,i.kt)("h4",{id:"parameters-2"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Default value"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"start")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"../interfaces/LatLonInterface"},(0,i.kt)("inlineCode",{parentName:"a"},"LatLonInterface"))," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},"Float64Array")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"undefined")),(0,i.kt)("td",{parentName:"tr",align:"left"},"A point on this circle which marks the beginning of an arc.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"end")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"../interfaces/LatLonInterface"},(0,i.kt)("inlineCode",{parentName:"a"},"LatLonInterface"))," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},"Float64Array")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"undefined")),(0,i.kt)("td",{parentName:"tr",align:"left"},"A point on this circle which marks the end of an arc.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"tolerance")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"GeoCircle.ANGULAR_TOLERANCE")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The error tolerance, in great-arc radians, when checking if ",(0,i.kt)("inlineCode",{parentName:"td"},"start")," and ",(0,i.kt)("inlineCode",{parentName:"td"},"end")," lie on this circle. Defaults to ",(0,i.kt)("inlineCode",{parentName:"td"},"GeoCircle.ANGULAR_TOLERANCE")," if not specified.")))),(0,i.kt)("h4",{id:"returns-3"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"number")),(0,i.kt)("p",null,"the angular width of the arc between the two points, in radians."),(0,i.kt)("h4",{id:"defined-in-11"},"Defined in"),(0,i.kt)("p",null,"src/sdk/utils/geo/GeoCircle.ts:222"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"arclength"},"arcLength"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"arcLength"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"angle"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"number")),(0,i.kt)("p",null,"Calculates the length of an arc along this circle subtended by a central angle."),(0,i.kt)("h4",{id:"parameters-3"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"angle")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"A central angle, in radians.")))),(0,i.kt)("h4",{id:"returns-4"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"number")),(0,i.kt)("p",null,"the length of the arc subtended by the angle, in great-arc radians."),(0,i.kt)("h4",{id:"defined-in-12"},"Defined in"),(0,i.kt)("p",null,"src/sdk/utils/geo/GeoCircle.ts:61"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"bearingat"},"bearingAt"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"bearingAt"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"point"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"tolerance?"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"number")),(0,i.kt)("p",null,"Calculates the true bearing along this circle at a point on the circle."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"throws"))," Error if the point does not lie on this circle."),(0,i.kt)("h4",{id:"parameters-4"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Default value"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"point")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"../interfaces/LatLonInterface"},(0,i.kt)("inlineCode",{parentName:"a"},"LatLonInterface"))," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},"Float64Array")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"undefined")),(0,i.kt)("td",{parentName:"tr",align:"left"},"A point on this circle.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"tolerance")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"GeoCircle.ANGULAR_TOLERANCE")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The error tolerance, in great-arc radians, when checking if ",(0,i.kt)("inlineCode",{parentName:"td"},"point")," lies on this circle. Defaults to ",(0,i.kt)("inlineCode",{parentName:"td"},"GeoCircle.ANGULAR_TOLERANCE")," if not specified.")))),(0,i.kt)("h4",{id:"returns-5"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"number")),(0,i.kt)("p",null,"the bearing along this circle at the point."),(0,i.kt)("h4",{id:"defined-in-13"},"Defined in"),(0,i.kt)("p",null,"src/sdk/utils/geo/GeoCircle.ts:268"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"closest"},"closest"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"closest"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"point"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"out"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"Float64Array")),(0,i.kt)("p",null,"Finds the closest point on this circle to a specified point. In other words, projects the specified point onto\nthis circle. If the specified point is equidistant from all points on this circle (i.e. it is coincident with or\nantipodal to this circle's center), NaN will be written to all fields of the result."),(0,i.kt)("h4",{id:"parameters-5"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"point")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"../interfaces/LatLonInterface"},(0,i.kt)("inlineCode",{parentName:"a"},"LatLonInterface"))," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},"Float64Array")),(0,i.kt)("td",{parentName:"tr",align:"left"},"A point, represented as either a position vector or lat/long coordinates.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"out")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"Float64Array")),(0,i.kt)("td",{parentName:"tr",align:"left"},"A Float64Array object to which to write the result.")))),(0,i.kt)("h4",{id:"returns-6"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Float64Array")),(0,i.kt)("p",null,"The closest point on this circle to the specified point."),(0,i.kt)("h4",{id:"defined-in-14"},"Defined in"),(0,i.kt)("p",null,"src/sdk/utils/geo/GeoCircle.ts:136"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"closest"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"point"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"out"),"): ",(0,i.kt)("a",{parentName:"p",href:"GeoPoint"},(0,i.kt)("inlineCode",{parentName:"a"},"GeoPoint"))),(0,i.kt)("p",null,"Finds the closest point on this circle to a specified point. In other words, projects the specified point onto\nthis circle. If the specified point is equidistant from all points on this circle (i.e. it is coincident with or\nantipodal to this circle's center), NaN will be written to all fields of the result."),(0,i.kt)("h4",{id:"parameters-6"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"point")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"../interfaces/LatLonInterface"},(0,i.kt)("inlineCode",{parentName:"a"},"LatLonInterface"))," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},"Float64Array")),(0,i.kt)("td",{parentName:"tr",align:"left"},"A point, represented as either a position vector or lat/long coordinates.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"out")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"GeoPoint"},(0,i.kt)("inlineCode",{parentName:"a"},"GeoPoint"))),(0,i.kt)("td",{parentName:"tr",align:"left"},"A GeoPoint object to which to write the result.")))),(0,i.kt)("h4",{id:"returns-7"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"GeoPoint"},(0,i.kt)("inlineCode",{parentName:"a"},"GeoPoint"))),(0,i.kt)("p",null,"The closest point on this circle to the specified point."),(0,i.kt)("h4",{id:"defined-in-15"},"Defined in"),(0,i.kt)("p",null,"src/sdk/utils/geo/GeoCircle.ts:145"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"distance"},"distance"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"distance"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"point"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"number")),(0,i.kt)("p",null,"Calculates and returns the great-circle distance from a specified point to the closest point that lies on this\ncircle. In other words, calculates the shortest distance from a point to this circle. The distance is signed, with\npositive distances representing deviation away from the center of the circle, and negative distances representing\ndeviation toward the center of the circle."),(0,i.kt)("h4",{id:"parameters-7"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"point")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"../interfaces/LatLonInterface"},(0,i.kt)("inlineCode",{parentName:"a"},"LatLonInterface"))," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},"Float64Array")),(0,i.kt)("td",{parentName:"tr",align:"left"},"A point, represented as either a position vector or lat/long coordinates.")))),(0,i.kt)("h4",{id:"returns-8"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"number")),(0,i.kt)("p",null,"the great circle distance, in great-arc radians, from the point to the closest point on this circle."),(0,i.kt)("h4",{id:"defined-in-16"},"Defined in"),(0,i.kt)("p",null,"src/sdk/utils/geo/GeoCircle.ts:179"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"distancealong"},"distanceAlong"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"distanceAlong"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"start"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"end"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"tolerance?"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"number")),(0,i.kt)("p",null,"Gets the distance along an arc between two points that lie on this circle. The arc extends from the first point\nto the second in a counterclockwise direction when viewed from above the center of the circle."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"throws"))," Error if either point does not lie on this circle."),(0,i.kt)("h4",{id:"parameters-8"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Default value"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"start")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"../interfaces/LatLonInterface"},(0,i.kt)("inlineCode",{parentName:"a"},"LatLonInterface"))," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},"Float64Array")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"undefined")),(0,i.kt)("td",{parentName:"tr",align:"left"},"A point on this circle which marks the beginning of an arc.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"end")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"../interfaces/LatLonInterface"},(0,i.kt)("inlineCode",{parentName:"a"},"LatLonInterface"))," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},"Float64Array")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"undefined")),(0,i.kt)("td",{parentName:"tr",align:"left"},"A point on this circle which marks the end of an arc.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"tolerance")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"GeoCircle.ANGULAR_TOLERANCE")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The error tolerance, in great-arc radians, when checking if ",(0,i.kt)("inlineCode",{parentName:"td"},"start")," and ",(0,i.kt)("inlineCode",{parentName:"td"},"end")," lie on this circle. Defaults to ",(0,i.kt)("inlineCode",{parentName:"td"},"GeoCircle.ANGULAR_TOLERANCE")," if not specified.")))),(0,i.kt)("h4",{id:"returns-9"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"number")),(0,i.kt)("p",null,"the length of the arc between the two points, in great-arc radians."),(0,i.kt)("h4",{id:"defined-in-17"},"Defined in"),(0,i.kt)("p",null,"src/sdk/utils/geo/GeoCircle.ts:256"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"distancetocenter"},"distanceToCenter"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("inlineCode",{parentName:"p"},"Protected")," ",(0,i.kt)("strong",{parentName:"p"},"distanceToCenter"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"point"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"number")),(0,i.kt)("p",null,"Gets the distance from a point to the center of this circle, in great-arc radians."),(0,i.kt)("h4",{id:"parameters-9"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"point")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"../interfaces/LatLonInterface"},(0,i.kt)("inlineCode",{parentName:"a"},"LatLonInterface"))," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},"Float64Array")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The point to which to measure the distance.")))),(0,i.kt)("h4",{id:"returns-10"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"number")),(0,i.kt)("p",null,"the distance from the point to the center of this circle."),(0,i.kt)("h4",{id:"defined-in-18"},"Defined in"),(0,i.kt)("p",null,"src/sdk/utils/geo/GeoCircle.ts:117"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"encircles"},"encircles"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"encircles"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"point"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"inclusive?"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"tolerance?"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"boolean")),(0,i.kt)("p",null,"Checks whether a point lies within the boundary defined by this circle. This is equivalent to checking whether\nthe distance of the point from the center of this circle is less than or equal to this circle's radius."),(0,i.kt)("h4",{id:"parameters-10"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Default value"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"point")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"../interfaces/LatLonInterface"},(0,i.kt)("inlineCode",{parentName:"a"},"LatLonInterface"))," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},"Float64Array")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"undefined")),(0,i.kt)("td",{parentName:"tr",align:"left"},"A point, represented as either a position vector or lat/long coordinates.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"inclusive")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"boolean")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"true")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Whether points that lie on this circle should pass the check. True by default.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"tolerance")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"GeoCircle.ANGULAR_TOLERANCE")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The error tolerance, in great-arc radians, of this operation. Defaults to ",(0,i.kt)("inlineCode",{parentName:"td"},"GeoCircle.ANGULAR_TOLERANCE")," if not specified.")))),(0,i.kt)("h4",{id:"returns-11"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"boolean")),(0,i.kt)("p",null,"whether the point lies within the boundary defined by this circle."),(0,i.kt)("h4",{id:"defined-in-19"},"Defined in"),(0,i.kt)("p",null,"src/sdk/utils/geo/GeoCircle.ts:205"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"includes"},"includes"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"includes"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"point"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"tolerance?"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"boolean")),(0,i.kt)("p",null,"Checks whether a point lies on this circle."),(0,i.kt)("h4",{id:"parameters-11"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Default value"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"point")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"../interfaces/LatLonInterface"},(0,i.kt)("inlineCode",{parentName:"a"},"LatLonInterface"))," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},"Float64Array")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"undefined")),(0,i.kt)("td",{parentName:"tr",align:"left"},"A point, represented as either a position vector or lat/long coordinates.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"tolerance")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"GeoCircle.ANGULAR_TOLERANCE")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The error tolerance, in great-arc radians, of this operation. Defaults to ",(0,i.kt)("inlineCode",{parentName:"td"},"GeoCircle.ANGULAR_TOLERANCE")," if not specified.")))),(0,i.kt)("h4",{id:"returns-12"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"boolean")),(0,i.kt)("p",null,"whether the point lies on this circle."),(0,i.kt)("h4",{id:"defined-in-20"},"Defined in"),(0,i.kt)("p",null,"src/sdk/utils/geo/GeoCircle.ts:191"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"intersection"},"intersection"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"intersection"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"other"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"out"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"number")),(0,i.kt)("p",null,"Calculates and returns the set of intersection points between this circle and another one, and writes the results\nto an array of position vectors."),(0,i.kt)("h4",{id:"parameters-12"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"other")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"GeoCircle"},(0,i.kt)("inlineCode",{parentName:"a"},"GeoCircle"))),(0,i.kt)("td",{parentName:"tr",align:"left"},"The other circle to test for intersections.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"out")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"Float64Array"),"[]"),(0,i.kt)("td",{parentName:"tr",align:"left"},"An array in which to store the results. The results will be stored at indexes 0 and 1. If these indexes are empty, then new Float64Array objects will be created and inserted into the array.")))),(0,i.kt)("h4",{id:"returns-13"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"number")),(0,i.kt)("p",null,"The number of solutions written to the out array. Either 0, 1, or 2."),(0,i.kt)("h4",{id:"defined-in-21"},"Defined in"),(0,i.kt)("p",null,"src/sdk/utils/geo/GeoCircle.ts:437"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"intersectiongeopoint"},"intersectionGeoPoint"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"intersectionGeoPoint"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"other"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"out"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"number")),(0,i.kt)("p",null,"Calculates and returns the set of intersection points between this circle and another one, and writes the results\nto an array of GeoPoint objects."),(0,i.kt)("h4",{id:"parameters-13"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"other")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"GeoCircle"},(0,i.kt)("inlineCode",{parentName:"a"},"GeoCircle"))),(0,i.kt)("td",{parentName:"tr",align:"left"},"The other circle to test for intersections.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"out")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"GeoPoint"},(0,i.kt)("inlineCode",{parentName:"a"},"GeoPoint")),"[]"),(0,i.kt)("td",{parentName:"tr",align:"left"},"An array in which to store the results. The results will be stored at indexes 0 and 1. If these indexes are empty, then new GeoPoint objects will be created and inserted into the array.")))),(0,i.kt)("h4",{id:"returns-14"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"number")),(0,i.kt)("p",null,"The number of solutions written to the out array. Either 0, 1, or 2."),(0,i.kt)("h4",{id:"defined-in-22"},"Defined in"),(0,i.kt)("p",null,"src/sdk/utils/geo/GeoCircle.ts:510"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"isgreatcircle"},"isGreatCircle"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"isGreatCircle"),"(): ",(0,i.kt)("inlineCode",{parentName:"p"},"boolean")),(0,i.kt)("p",null,"Checks whether this circle is a great circle, or equivalently, whether its radius is equal to pi / 2 great-arc\nradians."),(0,i.kt)("h4",{id:"returns-15"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"boolean")),(0,i.kt)("p",null,"Whether this circle is a great circle."),(0,i.kt)("h4",{id:"defined-in-23"},"Defined in"),(0,i.kt)("p",null,"src/sdk/utils/geo/GeoCircle.ts:52"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"numintersectionpoints"},"numIntersectionPoints"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"numIntersectionPoints"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"other"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"tolerance?"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"number")),(0,i.kt)("p",null,"Calculates and returns the number of intersection points between this circle and another one. Returns NaN if there\nare an infinite number of intersection points."),(0,i.kt)("h4",{id:"parameters-14"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Default value"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"other")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"GeoCircle"},(0,i.kt)("inlineCode",{parentName:"a"},"GeoCircle"))),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"undefined")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The other circle to test for intersections.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"tolerance")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"GeoCircle.ANGULAR_TOLERANCE")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The error tolerance, in great-arc radians, of this operation. Defaults to ",(0,i.kt)("inlineCode",{parentName:"td"},"GeoCircle.ANGULAR_TOLERANCE")," if not specified.")))),(0,i.kt)("h4",{id:"returns-16"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"number")),(0,i.kt)("p",null,"the number of intersection points between this circle and the other one."),(0,i.kt)("h4",{id:"defined-in-24"},"Defined in"),(0,i.kt)("p",null,"src/sdk/utils/geo/GeoCircle.ts:529"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"offsetanglealong"},"offsetAngleAlong"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"offsetAngleAlong"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"point"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"angle"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"out"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"tolerance?"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"Float64Array")),(0,i.kt)("p",null,"Offsets a point on this circle by a specified angular distance. The direction of the offset for positive distances\nis counterclockwise when viewed from above the center of this circle."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"throws"))," Error if the point does not lie on this circle."),(0,i.kt)("h4",{id:"parameters-15"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"point")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"../interfaces/LatLonInterface"},(0,i.kt)("inlineCode",{parentName:"a"},"LatLonInterface"))," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},"Float64Array")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The point to offset.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"angle")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The angular distance by which to offset, in radians.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"out")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"Float64Array")),(0,i.kt)("td",{parentName:"tr",align:"left"},"A Float64Array object to which to write the result.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"tolerance?")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The error tolerance, in great-arc radians, when checking if ",(0,i.kt)("inlineCode",{parentName:"td"},"point")," lies on this circle. Defaults to ",(0,i.kt)("inlineCode",{parentName:"td"},"GeoCircle.ANGULAR_TOLERANCE")," if not specified.")))),(0,i.kt)("h4",{id:"returns-17"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Float64Array")),(0,i.kt)("p",null,"The offset point."),(0,i.kt)("h4",{id:"defined-in-25"},"Defined in"),(0,i.kt)("p",null,"src/sdk/utils/geo/GeoCircle.ts:334"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"offsetAngleAlong"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"point"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"angle"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"out"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"tolerance?"),"): ",(0,i.kt)("a",{parentName:"p",href:"GeoPoint"},(0,i.kt)("inlineCode",{parentName:"a"},"GeoPoint"))),(0,i.kt)("p",null,"Offsets a point on this circle by a specified angular distance. The direction of the offset for positive distances\nis counterclockwise when viewed from above the center of this circle."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"throws"))," Error if the point does not lie on this circle."),(0,i.kt)("h4",{id:"parameters-16"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"point")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"../interfaces/LatLonInterface"},(0,i.kt)("inlineCode",{parentName:"a"},"LatLonInterface"))," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},"Float64Array")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The point to offset.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"angle")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The angular distance by which to offset, in radians.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"out")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"GeoPoint"},(0,i.kt)("inlineCode",{parentName:"a"},"GeoPoint"))),(0,i.kt)("td",{parentName:"tr",align:"left"},"A GeoPoint object to which to write the result.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"tolerance?")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The error tolerance, in great-arc radians, when checking if ",(0,i.kt)("inlineCode",{parentName:"td"},"point")," lies on this circle. Defaults to ",(0,i.kt)("inlineCode",{parentName:"td"},"GeoCircle.ANGULAR_TOLERANCE")," if not specified.")))),(0,i.kt)("h4",{id:"returns-18"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"GeoPoint"},(0,i.kt)("inlineCode",{parentName:"a"},"GeoPoint"))),(0,i.kt)("p",null,"The offset point."),(0,i.kt)("h4",{id:"defined-in-26"},"Defined in"),(0,i.kt)("p",null,"src/sdk/utils/geo/GeoCircle.ts:346"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"offsetdistancealong"},"offsetDistanceAlong"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"offsetDistanceAlong"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"point"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"distance"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"out"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"tolerance?"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"Float64Array")),(0,i.kt)("p",null,"Offsets a point on this circle by a specified distance. The direction of the offset for positive distances is\ncounterclockwise when viewed from above the center of this circle."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"throws"))," Error if the point does not lie on this circle."),(0,i.kt)("h4",{id:"parameters-17"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"point")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"../interfaces/LatLonInterface"},(0,i.kt)("inlineCode",{parentName:"a"},"LatLonInterface"))," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},"Float64Array")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The point to offset.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"distance")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The distance by which to offset, in great-arc radians.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"out")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"Float64Array")),(0,i.kt)("td",{parentName:"tr",align:"left"},"A Float64Array object to which to write the result.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"tolerance?")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The error tolerance, in great-arc radians, when checking if ",(0,i.kt)("inlineCode",{parentName:"td"},"point")," lies on this circle. Defaults to ",(0,i.kt)("inlineCode",{parentName:"td"},"GeoCircle.ANGULAR_TOLERANCE")," if not specified.")))),(0,i.kt)("h4",{id:"returns-19"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Float64Array")),(0,i.kt)("p",null,"The offset point."),(0,i.kt)("h4",{id:"defined-in-27"},"Defined in"),(0,i.kt)("p",null,"src/sdk/utils/geo/GeoCircle.ts:299"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"offsetDistanceAlong"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"point"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"distance"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"out"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"tolerance?"),"): ",(0,i.kt)("a",{parentName:"p",href:"GeoPoint"},(0,i.kt)("inlineCode",{parentName:"a"},"GeoPoint"))),(0,i.kt)("p",null,"Offsets a point on this circle by a specified distance. The direction of the offset for positive distances is\ncounterclockwise when viewed from above the center of this circle."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"throws"))," Error if the point does not lie on this circle."),(0,i.kt)("h4",{id:"parameters-18"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"point")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"../interfaces/LatLonInterface"},(0,i.kt)("inlineCode",{parentName:"a"},"LatLonInterface"))," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},"Float64Array")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The point to offset.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"distance")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The distance by which to offset, in great-arc radians.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"out")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"GeoPoint"},(0,i.kt)("inlineCode",{parentName:"a"},"GeoPoint"))),(0,i.kt)("td",{parentName:"tr",align:"left"},"A GeoPoint object to which to write the result.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"tolerance?")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The error tolerance, in great-arc radians, when checking if ",(0,i.kt)("inlineCode",{parentName:"td"},"point")," lies on this circle. Defaults to ",(0,i.kt)("inlineCode",{parentName:"td"},"GeoCircle.ANGULAR_TOLERANCE")," if not specified.")))),(0,i.kt)("h4",{id:"returns-20"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"GeoPoint"},(0,i.kt)("inlineCode",{parentName:"a"},"GeoPoint"))),(0,i.kt)("p",null,"The offset point."),(0,i.kt)("h4",{id:"defined-in-28"},"Defined in"),(0,i.kt)("p",null,"src/sdk/utils/geo/GeoCircle.ts:311"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"set"},"set"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"set"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"center"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"radius"),"): ",(0,i.kt)("a",{parentName:"p",href:"GeoCircle"},(0,i.kt)("inlineCode",{parentName:"a"},"GeoCircle"))),(0,i.kt)("p",null,"Sets the center and radius of this circle."),(0,i.kt)("h4",{id:"parameters-19"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"center")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"../interfaces/LatLonInterface"},(0,i.kt)("inlineCode",{parentName:"a"},"LatLonInterface"))," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},"Float64Array")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The new center.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"radius")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The new radius in great-arc radians.")))),(0,i.kt)("h4",{id:"returns-21"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"GeoCircle"},(0,i.kt)("inlineCode",{parentName:"a"},"GeoCircle"))),(0,i.kt)("p",null,"this circle, after it has been changed."),(0,i.kt)("h4",{id:"defined-in-29"},"Defined in"),(0,i.kt)("p",null,"src/sdk/utils/geo/GeoCircle.ts:71"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"setasgreatcircle"},"setAsGreatCircle"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"setAsGreatCircle"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"point1"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"point2"),"): ",(0,i.kt)("a",{parentName:"p",href:"GeoCircle"},(0,i.kt)("inlineCode",{parentName:"a"},"GeoCircle"))),(0,i.kt)("p",null,"Sets this circle to be a great circle which contains two given points. There are two possible great circles that\ncontain any two unique points; these circles differ only by their directionality (equivalently, the sign of their\nnormal vectors). The order of points passed to this method and the right-hand rule determines which of the two is\nreturned."),(0,i.kt)("h4",{id:"parameters-20"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"point1")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"../interfaces/LatLonInterface"},(0,i.kt)("inlineCode",{parentName:"a"},"LatLonInterface"))," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},"Float64Array")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The first point that lies on the great circle.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"point2")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"../interfaces/LatLonInterface"},(0,i.kt)("inlineCode",{parentName:"a"},"LatLonInterface"))," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},"Float64Array")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The second point that lies on the great circle.")))),(0,i.kt)("h4",{id:"returns-22"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"GeoCircle"},(0,i.kt)("inlineCode",{parentName:"a"},"GeoCircle"))),(0,i.kt)("p",null,"this circle, after it has been changed."),(0,i.kt)("h4",{id:"defined-in-30"},"Defined in"),(0,i.kt)("p",null,"src/sdk/utils/geo/GeoCircle.ts:97"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"setAsGreatCircle"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"point"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"bearing"),"): ",(0,i.kt)("a",{parentName:"p",href:"GeoCircle"},(0,i.kt)("inlineCode",{parentName:"a"},"GeoCircle"))),(0,i.kt)("p",null,"Sets this circle to be a great circle defined by a point and bearing offset, equivalent to the path projected from\nthe point with the specified initial bearing (forward azimuth)."),(0,i.kt)("h4",{id:"parameters-21"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"point")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"../interfaces/LatLonInterface"},(0,i.kt)("inlineCode",{parentName:"a"},"LatLonInterface"))," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},"Float64Array")),(0,i.kt)("td",{parentName:"tr",align:"left"},"A point that lies on the great circle.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"bearing")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The initial bearing from the point.")))),(0,i.kt)("h4",{id:"returns-23"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"GeoCircle"},(0,i.kt)("inlineCode",{parentName:"a"},"GeoCircle"))),(0,i.kt)("p",null,"this circle, after it has been changed."),(0,i.kt)("h4",{id:"defined-in-31"},"Defined in"),(0,i.kt)("p",null,"src/sdk/utils/geo/GeoCircle.ts:105"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"_getgreatcirclenormal"},"_","getGreatCircleNormal"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("inlineCode",{parentName:"p"},"Static")," ",(0,i.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,i.kt)("strong",{parentName:"p"},"_getGreatCircleNormal"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"arg1"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"arg2"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"out"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"Float64Array")),(0,i.kt)("p",null,"Calculates a normal vector for a great circle given two points which lie on the circle, or a point and initial bearing."),(0,i.kt)("h4",{id:"parameters-22"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"arg1")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"../interfaces/LatLonInterface"},(0,i.kt)("inlineCode",{parentName:"a"},"LatLonInterface"))," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},"Float64Array")),(0,i.kt)("td",{parentName:"tr",align:"left"},"A point that lies on the great circle.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"arg2")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")," ","|"," ",(0,i.kt)("a",{parentName:"td",href:"../interfaces/LatLonInterface"},(0,i.kt)("inlineCode",{parentName:"a"},"LatLonInterface"))," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},"Float64Array")),(0,i.kt)("td",{parentName:"tr",align:"left"},"A second point that lies on the great circle, or an initial bearing from the first point.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"out")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"Float64Array")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The vector to which to write the result.")))),(0,i.kt)("h4",{id:"returns-24"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Float64Array")),(0,i.kt)("p",null,"the normal vector for the great circle."),(0,i.kt)("h4",{id:"defined-in-32"},"Defined in"),(0,i.kt)("p",null,"src/sdk/utils/geo/GeoCircle.ts:638"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"createfrompoint"},"createFromPoint"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("inlineCode",{parentName:"p"},"Static")," ",(0,i.kt)("strong",{parentName:"p"},"createFromPoint"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"point"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"radius"),"): ",(0,i.kt)("a",{parentName:"p",href:"GeoCircle"},(0,i.kt)("inlineCode",{parentName:"a"},"GeoCircle"))),(0,i.kt)("p",null,"Creates a new small circle from a lat/long coordinate pair and radius."),(0,i.kt)("h4",{id:"parameters-23"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"point")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"../interfaces/LatLonInterface"},(0,i.kt)("inlineCode",{parentName:"a"},"LatLonInterface"))),(0,i.kt)("td",{parentName:"tr",align:"left"},"The center of the new small circle.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"radius")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The radius of the new small circle, in great-arc radians.")))),(0,i.kt)("h4",{id:"returns-25"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"GeoCircle"},(0,i.kt)("inlineCode",{parentName:"a"},"GeoCircle"))),(0,i.kt)("p",null,"a small circle."),(0,i.kt)("h4",{id:"defined-in-33"},"Defined in"),(0,i.kt)("p",null,"src/sdk/utils/geo/GeoCircle.ts:578"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"creategreatcircle"},"createGreatCircle"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("inlineCode",{parentName:"p"},"Static")," ",(0,i.kt)("strong",{parentName:"p"},"createGreatCircle"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"point1"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"point2"),"): ",(0,i.kt)("a",{parentName:"p",href:"GeoCircle"},(0,i.kt)("inlineCode",{parentName:"a"},"GeoCircle"))),(0,i.kt)("p",null,"Creates a new great circle that contains two points. There are two possible great circles that contain any two\nunique points; these circles differ only by their directionality (equivalently, the sign of their normal vectors).\nThe order of points passed to this method and the right-hand rule determines which of the two is returned."),(0,i.kt)("h4",{id:"parameters-24"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"point1")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"../interfaces/LatLonInterface"},(0,i.kt)("inlineCode",{parentName:"a"},"LatLonInterface"))," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},"Float64Array")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The first point that lies on the new great circle.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"point2")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"../interfaces/LatLonInterface"},(0,i.kt)("inlineCode",{parentName:"a"},"LatLonInterface"))," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},"Float64Array")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The second point that lies on the new great circle.")))),(0,i.kt)("h4",{id:"returns-26"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"GeoCircle"},(0,i.kt)("inlineCode",{parentName:"a"},"GeoCircle"))),(0,i.kt)("p",null,"a great circle."),(0,i.kt)("h4",{id:"defined-in-34"},"Defined in"),(0,i.kt)("p",null,"src/sdk/utils/geo/GeoCircle.ts:590"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("inlineCode",{parentName:"p"},"Static")," ",(0,i.kt)("strong",{parentName:"p"},"createGreatCircle"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"point"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"bearing"),"): ",(0,i.kt)("a",{parentName:"p",href:"GeoCircle"},(0,i.kt)("inlineCode",{parentName:"a"},"GeoCircle"))),(0,i.kt)("h4",{id:"parameters-25"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"point")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"../interfaces/LatLonInterface"},(0,i.kt)("inlineCode",{parentName:"a"},"LatLonInterface"))," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},"Float64Array"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"bearing")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number"))))),(0,i.kt)("h4",{id:"returns-27"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"GeoCircle"},(0,i.kt)("inlineCode",{parentName:"a"},"GeoCircle"))),(0,i.kt)("h4",{id:"defined-in-35"},"Defined in"),(0,i.kt)("p",null,"src/sdk/utils/geo/GeoCircle.ts:591"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"creategreatcirclefrompointbearing"},"createGreatCircleFromPointBearing"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("inlineCode",{parentName:"p"},"Static")," ",(0,i.kt)("strong",{parentName:"p"},"createGreatCircleFromPointBearing"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"point"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"bearing"),"): ",(0,i.kt)("a",{parentName:"p",href:"GeoCircle"},(0,i.kt)("inlineCode",{parentName:"a"},"GeoCircle"))),(0,i.kt)("p",null,"Creates a new great circle defined by one point and a bearing offset. The new great circle will be equivalent to\nthe path projected from the point with the specified initial bearing (forward azimuth)."),(0,i.kt)("h4",{id:"parameters-26"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"point")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"../interfaces/LatLonInterface"},(0,i.kt)("inlineCode",{parentName:"a"},"LatLonInterface"))," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},"Float64Array")),(0,i.kt)("td",{parentName:"tr",align:"left"},"A point that lies on the new great circle.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"bearing")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The initial bearing from the point.")))),(0,i.kt)("h4",{id:"returns-28"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"GeoCircle"},(0,i.kt)("inlineCode",{parentName:"a"},"GeoCircle"))),(0,i.kt)("p",null,"a great circle."),(0,i.kt)("h4",{id:"defined-in-36"},"Defined in"),(0,i.kt)("p",null,"src/sdk/utils/geo/GeoCircle.ts:604"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"getgreatcirclenormal"},"getGreatCircleNormal"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("inlineCode",{parentName:"p"},"Static")," ",(0,i.kt)("strong",{parentName:"p"},"getGreatCircleNormal"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"point1"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"point2"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"out"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"Float64Array")),(0,i.kt)("p",null,"Calculates a normal vector for a great circle given two points which lie on the circle. The order of points passed\nto this method and the right-hand rule determines which of the two possible normal vectors for the great circle is\nreturned."),(0,i.kt)("h4",{id:"parameters-27"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"point1")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"../interfaces/LatLonInterface"},(0,i.kt)("inlineCode",{parentName:"a"},"LatLonInterface"))," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},"Float64Array")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The first point that lies on the great circle.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"point2")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"../interfaces/LatLonInterface"},(0,i.kt)("inlineCode",{parentName:"a"},"LatLonInterface"))," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},"Float64Array")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The second point that lies on the great circle.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"out")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"Float64Array")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The vector to which to write the result.")))),(0,i.kt)("h4",{id:"returns-29"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Float64Array")),(0,i.kt)("p",null,"the normal vector for the great circle."),(0,i.kt)("h4",{id:"defined-in-37"},"Defined in"),(0,i.kt)("p",null,"src/sdk/utils/geo/GeoCircle.ts:617"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("inlineCode",{parentName:"p"},"Static")," ",(0,i.kt)("strong",{parentName:"p"},"getGreatCircleNormal"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"point"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"bearing"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"out"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"Float64Array")),(0,i.kt)("p",null,"Calculates a normal vector for a great circle given a point and initial bearing."),(0,i.kt)("h4",{id:"parameters-28"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"point")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"../interfaces/LatLonInterface"},(0,i.kt)("inlineCode",{parentName:"a"},"LatLonInterface"))," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},"Float64Array")),(0,i.kt)("td",{parentName:"tr",align:"left"},"A point that lies on the great circle.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"bearing")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The initial bearing from the point.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"out")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"Float64Array")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The vector to which to write the result.")))),(0,i.kt)("h4",{id:"returns-30"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Float64Array")),(0,i.kt)("p",null,"the normal vector for the great circle."),(0,i.kt)("h4",{id:"defined-in-38"},"Defined in"),(0,i.kt)("p",null,"src/sdk/utils/geo/GeoCircle.ts:625"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"getgreatcirclenormalfrompointbearing"},"getGreatCircleNormalFromPointBearing"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("inlineCode",{parentName:"p"},"Static")," ",(0,i.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,i.kt)("strong",{parentName:"p"},"getGreatCircleNormalFromPointBearing"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"point"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"bearing"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"out"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"Float64Array")),(0,i.kt)("p",null,"Calculates a normal vector for a great circle given a point and initial bearing."),(0,i.kt)("h4",{id:"parameters-29"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"point")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"../interfaces/LatLonInterface"},(0,i.kt)("inlineCode",{parentName:"a"},"LatLonInterface"))," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},"Float64Array")),(0,i.kt)("td",{parentName:"tr",align:"left"},"A point that lies on the great circle.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"bearing")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The initial bearing from the point.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"out")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"Float64Array")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The vector to which to write the result.")))),(0,i.kt)("h4",{id:"returns-31"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Float64Array")),(0,i.kt)("p",null,"the normal vector for the great circle."),(0,i.kt)("h4",{id:"defined-in-39"},"Defined in"),(0,i.kt)("p",null,"src/sdk/utils/geo/GeoCircle.ts:670"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"getgreatcirclenormalfrompoints"},"getGreatCircleNormalFromPoints"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("inlineCode",{parentName:"p"},"Static")," ",(0,i.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,i.kt)("strong",{parentName:"p"},"getGreatCircleNormalFromPoints"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"point1"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"point2"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"out"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"Float64Array")),(0,i.kt)("p",null,"Calculates a normal vector for a great circle given two points which lie on the cirlce."),(0,i.kt)("h4",{id:"parameters-30"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"point1")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"../interfaces/LatLonInterface"},(0,i.kt)("inlineCode",{parentName:"a"},"LatLonInterface"))," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},"Float64Array")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The first point that lies on the great circle.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"point2")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"../interfaces/LatLonInterface"},(0,i.kt)("inlineCode",{parentName:"a"},"LatLonInterface"))," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},"Float64Array")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The second point that lies on the great circle.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"out")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"Float64Array")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The vector to which to write the result.")))),(0,i.kt)("h4",{id:"returns-32"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Float64Array")),(0,i.kt)("p",null,"the normal vector for the great circle."),(0,i.kt)("h4",{id:"defined-in-40"},"Defined in"),(0,i.kt)("p",null,"src/sdk/utils/geo/GeoCircle.ts:653"))}s.isMDXComponent=!0}}]);