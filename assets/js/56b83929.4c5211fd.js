"use strict";(self.webpackChunkdocs_api=self.webpackChunkdocs_api||[]).push([[1224],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return m}});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var u=r.createContext({}),p=function(e){var t=r.useContext(u),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},c=function(e){var t=p(e.components);return r.createElement(u.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},s=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,u=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),s=p(n),m=i,f=s["".concat(u,".").concat(m)]||s[m]||d[m]||a;return n?r.createElement(f,l(l({ref:t},c),{},{components:n})):r.createElement(f,l({ref:t},c))}));function m(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,l=new Array(a);l[0]=s;var o={};for(var u in t)hasOwnProperty.call(t,u)&&(o[u]=t[u]);o.originalType=e,o.mdxType="string"==typeof e?e:i,l[1]=o;for(var p=2;p<a;p++)l[p]=n[p];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}s.displayName="MDXCreateElement"},6102:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return o},contentTitle:function(){return u},metadata:function(){return p},toc:function(){return c},default:function(){return s}});var r=n(7462),i=n(3366),a=(n(7294),n(3905)),l=["components"],o={id:"VNavAltCaptureType",title:"Enumeration: VNavAltCaptureType",sidebar_label:"VNavAltCaptureType",sidebar_position:0,custom_edit_url:null},u=void 0,p={unversionedId:"framework/enums/VNavAltCaptureType",id:"framework/enums/VNavAltCaptureType",isDocsHomePage:!1,title:"Enumeration: VNavAltCaptureType",description:"The current VNAV altitude capture type.",source:"@site/docs/framework/enums/VNavAltCaptureType.md",sourceDirName:"framework/enums",slug:"/framework/enums/VNavAltCaptureType",permalink:"/msfs-avionics-mirror/docs/framework/enums/VNavAltCaptureType",editUrl:null,tags:[],version:"current",sidebarPosition:0,frontMatter:{id:"VNavAltCaptureType",title:"Enumeration: VNavAltCaptureType",sidebar_label:"VNavAltCaptureType",sidebar_position:0,custom_edit_url:null},sidebar:"docsSidebar",previous:{title:"UserFacilityType",permalink:"/msfs-avionics-mirror/docs/framework/enums/UserFacilityType"},next:{title:"VNavApproachGuidanceMode",permalink:"/msfs-avionics-mirror/docs/framework/enums/VNavApproachGuidanceMode"}},c=[{value:"Enumeration members",id:"enumeration-members",children:[{value:"None",id:"none",children:[{value:"Defined in",id:"defined-in",children:[],level:4}],level:3},{value:"Selected",id:"selected",children:[{value:"Defined in",id:"defined-in-1",children:[],level:4}],level:3},{value:"VNAV",id:"vnav",children:[{value:"Defined in",id:"defined-in-2",children:[],level:4}],level:3}],level:2}],d={toc:c};function s(e){var t=e.components,n=(0,i.Z)(e,l);return(0,a.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"The current VNAV altitude capture type."),(0,a.kt)("h2",{id:"enumeration-members"},"Enumeration members"),(0,a.kt)("h3",{id:"none"},"None"),(0,a.kt)("p",null,"\u2022 ",(0,a.kt)("strong",{parentName:"p"},"None")," = ",(0,a.kt)("inlineCode",{parentName:"p"},"0")),(0,a.kt)("p",null,"Altitude capture is not armed."),(0,a.kt)("h4",{id:"defined-in"},"Defined in"),(0,a.kt)("p",null,"src/sdk/autopilot/VerticalNavigation.ts:54"),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"selected"},"Selected"),(0,a.kt)("p",null,"\u2022 ",(0,a.kt)("strong",{parentName:"p"},"Selected")," = ",(0,a.kt)("inlineCode",{parentName:"p"},"1")),(0,a.kt)("p",null,"Altitude will capture the selected altitude."),(0,a.kt)("h4",{id:"defined-in-1"},"Defined in"),(0,a.kt)("p",null,"src/sdk/autopilot/VerticalNavigation.ts:57"),(0,a.kt)("hr",null),(0,a.kt)("h3",{id:"vnav"},"VNAV"),(0,a.kt)("p",null,"\u2022 ",(0,a.kt)("strong",{parentName:"p"},"VNAV")," = ",(0,a.kt)("inlineCode",{parentName:"p"},"2")),(0,a.kt)("p",null,"Altitude will capture the VANV target altitude."),(0,a.kt)("h4",{id:"defined-in-2"},"Defined in"),(0,a.kt)("p",null,"src/sdk/autopilot/VerticalNavigation.ts:60"))}s.isMDXComponent=!0}}]);