"use strict";(self.webpackChunkdocs_api=self.webpackChunkdocs_api||[]).push([[7035],{3905:function(e,t,n){n.d(t,{Zo:function(){return s},kt:function(){return f}});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},l=Object.keys(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var d=r.createContext({}),c=function(e){var t=r.useContext(d),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},s=function(e){var t=c(e.components);return r.createElement(d.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,l=e.originalType,d=e.parentName,s=o(e,["components","mdxType","originalType","parentName"]),u=c(n),f=i,h=u["".concat(d,".").concat(f)]||u[f]||p[f]||l;return n?r.createElement(h,a(a({ref:t},s),{},{components:n})):r.createElement(h,a({ref:t},s))}));function f(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var l=n.length,a=new Array(l);a[0]=u;var o={};for(var d in t)hasOwnProperty.call(t,d)&&(o[d]=t[d]);o.originalType=e,o.mdxType="string"==typeof e?e:i,a[1]=o;for(var c=2;c<l;c++)a[c]=n[c];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},5198:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return o},contentTitle:function(){return d},metadata:function(){return c},toc:function(){return s},default:function(){return u}});var r=n(7462),i=n(3366),l=(n(7294),n(3905)),a=["components"],o={id:"BaseFlightPathVector",title:"Interface: BaseFlightPathVector",sidebar_label:"BaseFlightPathVector",sidebar_position:0,custom_edit_url:null},d=void 0,c={unversionedId:"framework/interfaces/BaseFlightPathVector",id:"framework/interfaces/BaseFlightPathVector",isDocsHomePage:!1,title:"Interface: BaseFlightPathVector",description:"A basic flight path vector.",source:"@site/docs/framework/interfaces/BaseFlightPathVector.md",sourceDirName:"framework/interfaces",slug:"/framework/interfaces/BaseFlightPathVector",permalink:"/msfs-avionics-mirror/docs/framework/interfaces/BaseFlightPathVector",editUrl:null,tags:[],version:"current",sidebarPosition:0,frontMatter:{id:"BaseFlightPathVector",title:"Interface: BaseFlightPathVector",sidebar_label:"BaseFlightPathVector",sidebar_position:0,custom_edit_url:null},sidebar:"docsSidebar",previous:{title:"ApproachTransition",permalink:"/msfs-avionics-mirror/docs/framework/interfaces/ApproachTransition"},next:{title:"BoundaryFacility",permalink:"/msfs-avionics-mirror/docs/framework/interfaces/BoundaryFacility"}},s=[{value:"Hierarchy",id:"hierarchy",children:[],level:2},{value:"Properties",id:"properties",children:[{value:"distance",id:"distance",children:[{value:"Defined in",id:"defined-in",children:[],level:4}],level:3},{value:"endLat",id:"endlat",children:[{value:"Defined in",id:"defined-in-1",children:[],level:4}],level:3},{value:"endLon",id:"endlon",children:[{value:"Defined in",id:"defined-in-2",children:[],level:4}],level:3},{value:"flags",id:"flags",children:[{value:"Defined in",id:"defined-in-3",children:[],level:4}],level:3},{value:"startLat",id:"startlat",children:[{value:"Defined in",id:"defined-in-4",children:[],level:4}],level:3},{value:"startLon",id:"startlon",children:[{value:"Defined in",id:"defined-in-5",children:[],level:4}],level:3},{value:"vectorType",id:"vectortype",children:[{value:"Defined in",id:"defined-in-6",children:[],level:4}],level:3}],level:2}],p={toc:s};function u(e){var t=e.components,n=(0,i.Z)(e,a);return(0,l.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"A basic flight path vector."),(0,l.kt)("h2",{id:"hierarchy"},"Hierarchy"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},(0,l.kt)("inlineCode",{parentName:"strong"},"BaseFlightPathVector"))),(0,l.kt)("p",{parentName:"li"},"\u21b3 ",(0,l.kt)("a",{parentName:"p",href:"CircleVector"},(0,l.kt)("inlineCode",{parentName:"a"},"CircleVector"))))),(0,l.kt)("h2",{id:"properties"},"Properties"),(0,l.kt)("h3",{id:"distance"},"distance"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("strong",{parentName:"p"},"distance"),": ",(0,l.kt)("inlineCode",{parentName:"p"},"number")),(0,l.kt)("p",null,"The total distance of the vector, in meters."),(0,l.kt)("h4",{id:"defined-in"},"Defined in"),(0,l.kt)("p",null,"src/sdk/flightplan/FlightPlanning.ts:45"),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"endlat"},"endLat"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("strong",{parentName:"p"},"endLat"),": ",(0,l.kt)("inlineCode",{parentName:"p"},"number")),(0,l.kt)("p",null,"The latitude of the end of the vector."),(0,l.kt)("h4",{id:"defined-in-1"},"Defined in"),(0,l.kt)("p",null,"src/sdk/flightplan/FlightPlanning.ts:39"),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"endlon"},"endLon"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("strong",{parentName:"p"},"endLon"),": ",(0,l.kt)("inlineCode",{parentName:"p"},"number")),(0,l.kt)("p",null,"The longitude of the end of the vector."),(0,l.kt)("h4",{id:"defined-in-2"},"Defined in"),(0,l.kt)("p",null,"src/sdk/flightplan/FlightPlanning.ts:42"),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"flags"},"flags"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("strong",{parentName:"p"},"flags"),": ",(0,l.kt)("inlineCode",{parentName:"p"},"number")),(0,l.kt)("p",null,"Bit flags describing the vector."),(0,l.kt)("h4",{id:"defined-in-3"},"Defined in"),(0,l.kt)("p",null,"src/sdk/flightplan/FlightPlanning.ts:30"),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"startlat"},"startLat"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("strong",{parentName:"p"},"startLat"),": ",(0,l.kt)("inlineCode",{parentName:"p"},"number")),(0,l.kt)("p",null,"The latitude of the start of the vector."),(0,l.kt)("h4",{id:"defined-in-4"},"Defined in"),(0,l.kt)("p",null,"src/sdk/flightplan/FlightPlanning.ts:33"),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"startlon"},"startLon"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("strong",{parentName:"p"},"startLon"),": ",(0,l.kt)("inlineCode",{parentName:"p"},"number")),(0,l.kt)("p",null,"The longitude of the start of the vector."),(0,l.kt)("h4",{id:"defined-in-5"},"Defined in"),(0,l.kt)("p",null,"src/sdk/flightplan/FlightPlanning.ts:36"),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"vectortype"},"vectorType"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("strong",{parentName:"p"},"vectorType"),": ",(0,l.kt)("inlineCode",{parentName:"p"},"string")),(0,l.kt)("p",null,"The type of vector."),(0,l.kt)("h4",{id:"defined-in-6"},"Defined in"),(0,l.kt)("p",null,"src/sdk/flightplan/FlightPlanning.ts:27"))}u.isMDXComponent=!0}}]);