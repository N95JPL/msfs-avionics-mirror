"use strict";(self.webpackChunkdocs_api=self.webpackChunkdocs_api||[]).push([[9876],{3905:function(e,n,t){t.d(n,{Zo:function(){return u},kt:function(){return f}});var i=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function l(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);n&&(i=i.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,i)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?l(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function d(e,n){if(null==e)return{};var t,i,r=function(e,n){if(null==e)return{};var t,i,r={},l=Object.keys(e);for(i=0;i<l.length;i++)t=l[i],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(i=0;i<l.length;i++)t=l[i],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var o=i.createContext({}),s=function(e){var n=i.useContext(o),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},u=function(e){var n=s(e.components);return i.createElement(o.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return i.createElement(i.Fragment,{},n)}},c=i.forwardRef((function(e,n){var t=e.components,r=e.mdxType,l=e.originalType,o=e.parentName,u=d(e,["components","mdxType","originalType","parentName"]),c=s(t),f=r,k=c["".concat(o,".").concat(f)]||c[f]||p[f]||l;return t?i.createElement(k,a(a({ref:n},u),{},{components:t})):i.createElement(k,a({ref:n},u))}));function f(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var l=t.length,a=new Array(l);a[0]=c;var d={};for(var o in n)hasOwnProperty.call(n,o)&&(d[o]=n[o]);d.originalType=e,d.mdxType="string"==typeof e?e:r,a[1]=d;for(var s=2;s<l;s++)a[s]=t[s];return i.createElement.apply(null,a)}return i.createElement.apply(null,t)}c.displayName="MDXCreateElement"},8316:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return d},contentTitle:function(){return o},metadata:function(){return s},toc:function(){return u},default:function(){return c}});var i=t(7462),r=t(3366),l=(t(7294),t(3905)),a=["components"],d={id:"VNavLeg",title:"Interface: VNavLeg",sidebar_label:"VNavLeg",sidebar_position:0,custom_edit_url:null},o=void 0,s={unversionedId:"framework/interfaces/VNavLeg",id:"framework/interfaces/VNavLeg",isDocsHomePage:!1,title:"Interface: VNavLeg",description:"A leg in the calculated VNAV plan.",source:"@site/docs/framework/interfaces/VNavLeg.md",sourceDirName:"framework/interfaces",slug:"/framework/interfaces/VNavLeg",permalink:"/msfs-avionics-mirror/docs/framework/interfaces/VNavLeg",editUrl:null,tags:[],version:"current",sidebarPosition:0,frontMatter:{id:"VNavLeg",title:"Interface: VNavLeg",sidebar_label:"VNavLeg",sidebar_position:0,custom_edit_url:null},sidebar:"docsSidebar",previous:{title:"VNavConstraint",permalink:"/msfs-avionics-mirror/docs/framework/interfaces/VNavConstraint"},next:{title:"VNavPlanSegment",permalink:"/msfs-avionics-mirror/docs/framework/interfaces/VNavPlanSegment"}},u=[{value:"Properties",id:"properties",children:[{value:"altitude",id:"altitude",children:[{value:"Defined in",id:"defined-in",children:[],level:4}],level:3},{value:"distance",id:"distance",children:[{value:"Defined in",id:"defined-in-1",children:[],level:4}],level:3},{value:"fpa",id:"fpa",children:[{value:"Defined in",id:"defined-in-2",children:[],level:4}],level:3},{value:"invalidConstraintAltitude",id:"invalidconstraintaltitude",children:[{value:"Defined in",id:"defined-in-3",children:[],level:4}],level:3},{value:"isAdvisory",id:"isadvisory",children:[{value:"Defined in",id:"defined-in-4",children:[],level:4}],level:3},{value:"isBod",id:"isbod",children:[{value:"Defined in",id:"defined-in-5",children:[],level:4}],level:3},{value:"isUserDefined",id:"isuserdefined",children:[{value:"Defined in",id:"defined-in-6",children:[],level:4}],level:3},{value:"legIndex",id:"legindex",children:[{value:"Defined in",id:"defined-in-7",children:[],level:4}],level:3},{value:"name",id:"name",children:[{value:"Defined in",id:"defined-in-8",children:[],level:4}],level:3},{value:"segmentIndex",id:"segmentindex",children:[{value:"Defined in",id:"defined-in-9",children:[],level:4}],level:3},{value:"todDistance",id:"toddistance",children:[{value:"Defined in",id:"defined-in-10",children:[],level:4}],level:3}],level:2}],p={toc:u};function c(e){var n=e.components,t=(0,r.Z)(e,a);return(0,l.kt)("wrapper",(0,i.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"A leg in the calculated VNAV plan."),(0,l.kt)("h2",{id:"properties"},"Properties"),(0,l.kt)("h3",{id:"altitude"},"altitude"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("strong",{parentName:"p"},"altitude"),": ",(0,l.kt)("inlineCode",{parentName:"p"},"number")),(0,l.kt)("p",null,"The altitude that the leg ends at."),(0,l.kt)("h4",{id:"defined-in"},"Defined in"),(0,l.kt)("p",null,"src/sdk/autopilot/VerticalNavigation.ts:92"),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"distance"},"distance"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("strong",{parentName:"p"},"distance"),": ",(0,l.kt)("inlineCode",{parentName:"p"},"number")),(0,l.kt)("p",null,"The distance of the leg."),(0,l.kt)("h4",{id:"defined-in-1"},"Defined in"),(0,l.kt)("p",null,"src/sdk/autopilot/VerticalNavigation.ts:80"),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"fpa"},"fpa"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("strong",{parentName:"p"},"fpa"),": ",(0,l.kt)("inlineCode",{parentName:"p"},"number")),(0,l.kt)("p",null,"The fpa of the leg."),(0,l.kt)("h4",{id:"defined-in-2"},"Defined in"),(0,l.kt)("p",null,"src/sdk/autopilot/VerticalNavigation.ts:77"),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"invalidconstraintaltitude"},"invalidConstraintAltitude"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,l.kt)("strong",{parentName:"p"},"invalidConstraintAltitude"),": ",(0,l.kt)("inlineCode",{parentName:"p"},"number")),(0,l.kt)("p",null,"The constrant altitude assigned to this leg that is invalid, if one exists."),(0,l.kt)("h4",{id:"defined-in-3"},"Defined in"),(0,l.kt)("p",null,"src/sdk/autopilot/VerticalNavigation.ts:98"),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"isadvisory"},"isAdvisory"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("strong",{parentName:"p"},"isAdvisory"),": ",(0,l.kt)("inlineCode",{parentName:"p"},"boolean")),(0,l.kt)("p",null,"Whether or not the altitude provided is advisory."),(0,l.kt)("h4",{id:"defined-in-4"},"Defined in"),(0,l.kt)("p",null,"src/sdk/autopilot/VerticalNavigation.ts:89"),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"isbod"},"isBod"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("strong",{parentName:"p"},"isBod"),": ",(0,l.kt)("inlineCode",{parentName:"p"},"boolean")),(0,l.kt)("p",null,"If the leg is a bottom of descent."),(0,l.kt)("h4",{id:"defined-in-5"},"Defined in"),(0,l.kt)("p",null,"src/sdk/autopilot/VerticalNavigation.ts:86"),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"isuserdefined"},"isUserDefined"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("strong",{parentName:"p"},"isUserDefined"),": ",(0,l.kt)("inlineCode",{parentName:"p"},"boolean")),(0,l.kt)("p",null,"Whether or not the constraint is user defined."),(0,l.kt)("h4",{id:"defined-in-6"},"Defined in"),(0,l.kt)("p",null,"src/sdk/autopilot/VerticalNavigation.ts:95"),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"legindex"},"legIndex"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("strong",{parentName:"p"},"legIndex"),": ",(0,l.kt)("inlineCode",{parentName:"p"},"number")),(0,l.kt)("p",null,"The index of the leg within the plan segment."),(0,l.kt)("h4",{id:"defined-in-7"},"Defined in"),(0,l.kt)("p",null,"src/sdk/autopilot/VerticalNavigation.ts:71"),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"name"},"name"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("strong",{parentName:"p"},"name"),": ",(0,l.kt)("inlineCode",{parentName:"p"},"string")),(0,l.kt)("p",null,"The name of the leg."),(0,l.kt)("h4",{id:"defined-in-8"},"Defined in"),(0,l.kt)("p",null,"src/sdk/autopilot/VerticalNavigation.ts:74"),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"segmentindex"},"segmentIndex"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("strong",{parentName:"p"},"segmentIndex"),": ",(0,l.kt)("inlineCode",{parentName:"p"},"number")),(0,l.kt)("p",null,"The index of the flight plan segment."),(0,l.kt)("h4",{id:"defined-in-9"},"Defined in"),(0,l.kt)("p",null,"src/sdk/autopilot/VerticalNavigation.ts:68"),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"toddistance"},"todDistance"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,l.kt)("strong",{parentName:"p"},"todDistance"),": ",(0,l.kt)("inlineCode",{parentName:"p"},"number")),(0,l.kt)("p",null,"The distance from the end of the leg to the TOD, if any."),(0,l.kt)("h4",{id:"defined-in-10"},"Defined in"),(0,l.kt)("p",null,"src/sdk/autopilot/VerticalNavigation.ts:83"))}c.isMDXComponent=!0}}]);