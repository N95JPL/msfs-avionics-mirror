"use strict";(self.webpackChunkdocs_api=self.webpackChunkdocs_api||[]).push([[9671],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return u}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),c=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=c(e.components);return a.createElement(l.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=c(n),u=r,f=d["".concat(l,".").concat(u)]||d[u]||m[u]||o;return n?a.createElement(f,i(i({ref:t},p),{},{components:n})):a.createElement(f,i({ref:t},p))}));function u(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:r,i[1]=s;for(var c=2;c<o;c++)i[c]=n[c];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},9881:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return s},contentTitle:function(){return l},metadata:function(){return c},toc:function(){return p},default:function(){return d}});var a=n(7462),r=n(3366),o=(n(7294),n(3905)),i=["components"],s={sidebar_position:1},l="MSFS Avionics Framework",c={unversionedId:"intro",id:"intro",isDocsHomePage:!1,title:"MSFS Avionics Framework",description:"This avionics framework is a React-like framework based in Typescript and JSX, which allows users to leverage the powerful component composition skills that come with frameworks like React, while keeping the implementation light enough and opinionated enough to promote MSFS TS/JS development best practices.",source:"@site/docs/intro.md",sourceDirName:".",slug:"/intro",permalink:"/msfs-avionics-mirror/docs/intro",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"docsSidebar",next:{title:"Setting Up Your Environment",permalink:"/msfs-avionics-mirror/docs/getting-started/setting-up-your-environment"}},p=[{value:"A Primer on FSComponent",id:"a-primer-on-fscomponent",children:[{value:"Similarities Between React and FSComponent",id:"similarities-between-react-and-fscomponent",children:[],level:3},{value:"Differences Between React and FSComponent",id:"differences-between-react-and-fscomponent",children:[],level:3}],level:2}],m={toc:p};function d(e){var t=e.components,n=(0,r.Z)(e,i);return(0,o.kt)("wrapper",(0,a.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"msfs-avionics-framework"},"MSFS Avionics Framework"),(0,o.kt)("p",null,"This avionics framework is a React-like framework based in Typescript and JSX, which allows users to leverage the powerful component composition skills that come with frameworks like React, while keeping the implementation light enough and opinionated enough to promote MSFS TS/JS development best practices."),(0,o.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"FSComponent and the accompanying avionics framework documented here is a separate extension of the official MSFS SDK and is presently used in the G1000 NXi. As such, it represents a somewhat fluid API that may change somewhat over time as more of the framework is developed."),(0,o.kt)("p",{parentName:"div"},"If you are using only the official MSFS SDK components and not referencing this avionics framework, many portions of this documentation will not apply."))),(0,o.kt)("h2",{id:"a-primer-on-fscomponent"},"A Primer on FSComponent"),(0,o.kt)("p",null,'FSComponent is heavily based on the React API and will feel very familiar to users who have done work in React and/or with JSX. However, while frameworks like React, Angular, and Vue.js all offer excellent ways of componentizing code and maintaining reusablity with good architectural boundaries, they unfortunately represent a kind of "worst case" performance load when using them with a real-time, low latency system like a game or a simulation, for the following reasons:'),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Props and state changes cause potentially a large number of virtual DOM nodes to be generated on changes as components re-render"),(0,o.kt)("li",{parentName:"ul"},"Changes originating high in the tree can cause huge swaths of nodes to render, and often the causes and solutions for optimizing are not always intuitive for users"),(0,o.kt)("li",{parentName:"ul"},"Resultant DOM nodes are generally cached, but the way they are used and inserted can cause the area to re-paint, an operation that is to be heavily avoided with the Coherent GT JS framework used inside the simulator"),(0,o.kt)("li",{parentName:"ul"},"The garbage generated from all these allocations can stress the garbage collector, causing GC pauses (seen as sim stutters) as the large amount of no longer needed virtual and real DOM nodes and accompanying data is collected")),(0,o.kt)("p",null,"As a result FSComponent was built avoiding these issues by promoting paradigms that allow developers to keep local state and update only as necessary."),(0,o.kt)("h3",{id:"similarities-between-react-and-fscomponent"},"Similarities Between React and FSComponent"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Components are built using JSX and classes, with a ",(0,o.kt)("inlineCode",{parentName:"li"},"render()")," method"),(0,o.kt)("li",{parentName:"ul"},"Components can be passed properties from their parents"),(0,o.kt)("li",{parentName:"ul"},"Components can be reused, nested, and can be passed children for display and manipulation")),(0,o.kt)("h3",{id:"differences-between-react-and-fscomponent"},"Differences Between React and FSComponent"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"All FSComponent components are class based; there are no functional components"),(0,o.kt)("li",{parentName:"ul"},"Components do not re-render on props changes"),(0,o.kt)("li",{parentName:"ul"},"Since there are no automatic re-renders, there is no need for a ",(0,o.kt)("inlineCode",{parentName:"li"},"state")," or ",(0,o.kt)("inlineCode",{parentName:"li"},"setState()")),(0,o.kt)("li",{parentName:"ul"},"Use of ",(0,o.kt)("inlineCode",{parentName:"li"},"ref")," is actually encouraged as opposed to discouraged")),(0,o.kt)("p",null,"Avionics displays are generally extremely stateful, and thus this alternative approach fits excellently into the space as well as provides a very robust performance path."))}d.isMDXComponent=!0}}]);