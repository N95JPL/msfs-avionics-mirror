"use strict";(self.webpackChunkdocs_api=self.webpackChunkdocs_api||[]).push([[2771],{3905:function(e,n,t){t.d(n,{Zo:function(){return c},kt:function(){return h}});var r=t(7294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function l(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?l(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},l=Object.keys(e);for(r=0;r<l.length;r++)t=l[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)t=l[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var d=r.createContext({}),u=function(e){var n=r.useContext(d),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},c=function(e){var n=u(e.components);return r.createElement(d.Provider,{value:n},e.children)},s={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},p=r.forwardRef((function(e,n){var t=e.components,i=e.mdxType,l=e.originalType,d=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),p=u(t),h=i,f=p["".concat(d,".").concat(h)]||p[h]||s[h]||l;return t?r.createElement(f,a(a({ref:n},c),{},{components:t})):r.createElement(f,a({ref:n},c))}));function h(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var l=t.length,a=new Array(l);a[0]=p;var o={};for(var d in n)hasOwnProperty.call(n,d)&&(o[d]=n[d]);o.originalType=e,o.mdxType="string"==typeof e?e:i,a[1]=o;for(var u=2;u<l;u++)a[u]=t[u];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}p.displayName="MDXCreateElement"},2015:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return o},contentTitle:function(){return d},metadata:function(){return u},toc:function(){return c},default:function(){return p}});var r=t(7462),i=t(3366),l=(t(7294),t(3905)),a=["components"],o={id:"FlightPathVectorFlags",title:"Enumeration: FlightPathVectorFlags",sidebar_label:"FlightPathVectorFlags",sidebar_position:0,custom_edit_url:null},d=void 0,u={unversionedId:"framework/enums/FlightPathVectorFlags",id:"framework/enums/FlightPathVectorFlags",isDocsHomePage:!1,title:"Enumeration: FlightPathVectorFlags",description:"The transition type to which a flight path vector belongs.",source:"@site/docs/framework/enums/FlightPathVectorFlags.md",sourceDirName:"framework/enums",slug:"/framework/enums/FlightPathVectorFlags",permalink:"/msfs-avionics-mirror/docs/framework/enums/FlightPathVectorFlags",editUrl:null,tags:[],version:"current",sidebarPosition:0,frontMatter:{id:"FlightPathVectorFlags",title:"Enumeration: FlightPathVectorFlags",sidebar_label:"FlightPathVectorFlags",sidebar_position:0,custom_edit_url:null},sidebar:"docsSidebar",previous:{title:"FixTypeFlags",permalink:"/msfs-avionics-mirror/docs/framework/enums/FixTypeFlags"},next:{title:"FlightPlanSegmentType",permalink:"/msfs-avionics-mirror/docs/framework/enums/FlightPlanSegmentType"}},c=[{value:"Enumeration members",id:"enumeration-members",children:[{value:"AnticipatedTurn",id:"anticipatedturn",children:[{value:"Defined in",id:"defined-in",children:[],level:4}],level:3},{value:"Arc",id:"arc",children:[{value:"Defined in",id:"defined-in-1",children:[],level:4}],level:3},{value:"CourseReversal",id:"coursereversal",children:[{value:"Defined in",id:"defined-in-2",children:[],level:4}],level:3},{value:"HoldEntry",id:"holdentry",children:[{value:"Defined in",id:"defined-in-3",children:[],level:4}],level:3},{value:"HoldLeg",id:"holdleg",children:[{value:"Defined in",id:"defined-in-4",children:[],level:4}],level:3},{value:"LegToLegTurn",id:"legtolegturn",children:[{value:"Defined in",id:"defined-in-5",children:[],level:4}],level:3},{value:"None",id:"none",children:[{value:"Defined in",id:"defined-in-6",children:[],level:4}],level:3},{value:"TurnToCourse",id:"turntocourse",children:[{value:"Defined in",id:"defined-in-7",children:[],level:4}],level:3}],level:2}],s={toc:c};function p(e){var n=e.components,t=(0,i.Z)(e,a);return(0,l.kt)("wrapper",(0,r.Z)({},s,t,{components:n,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"The transition type to which a flight path vector belongs."),(0,l.kt)("h2",{id:"enumeration-members"},"Enumeration members"),(0,l.kt)("h3",{id:"anticipatedturn"},"AnticipatedTurn"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("strong",{parentName:"p"},"AnticipatedTurn")," = ",(0,l.kt)("inlineCode",{parentName:"p"},"64")),(0,l.kt)("h4",{id:"defined-in"},"Defined in"),(0,l.kt)("p",null,"src/sdk/flightplan/FlightPlanning.ts:19"),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"arc"},"Arc"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("strong",{parentName:"p"},"Arc")," = ",(0,l.kt)("inlineCode",{parentName:"p"},"2")),(0,l.kt)("h4",{id:"defined-in-1"},"Defined in"),(0,l.kt)("p",null,"src/sdk/flightplan/FlightPlanning.ts:14"),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"coursereversal"},"CourseReversal"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("strong",{parentName:"p"},"CourseReversal")," = ",(0,l.kt)("inlineCode",{parentName:"p"},"16")),(0,l.kt)("h4",{id:"defined-in-2"},"Defined in"),(0,l.kt)("p",null,"src/sdk/flightplan/FlightPlanning.ts:17"),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"holdentry"},"HoldEntry"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("strong",{parentName:"p"},"HoldEntry")," = ",(0,l.kt)("inlineCode",{parentName:"p"},"4")),(0,l.kt)("h4",{id:"defined-in-3"},"Defined in"),(0,l.kt)("p",null,"src/sdk/flightplan/FlightPlanning.ts:15"),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"holdleg"},"HoldLeg"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("strong",{parentName:"p"},"HoldLeg")," = ",(0,l.kt)("inlineCode",{parentName:"p"},"8")),(0,l.kt)("h4",{id:"defined-in-4"},"Defined in"),(0,l.kt)("p",null,"src/sdk/flightplan/FlightPlanning.ts:16"),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"legtolegturn"},"LegToLegTurn"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("strong",{parentName:"p"},"LegToLegTurn")," = ",(0,l.kt)("inlineCode",{parentName:"p"},"32")),(0,l.kt)("h4",{id:"defined-in-5"},"Defined in"),(0,l.kt)("p",null,"src/sdk/flightplan/FlightPlanning.ts:18"),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"none"},"None"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("strong",{parentName:"p"},"None")," = ",(0,l.kt)("inlineCode",{parentName:"p"},"0")),(0,l.kt)("h4",{id:"defined-in-6"},"Defined in"),(0,l.kt)("p",null,"src/sdk/flightplan/FlightPlanning.ts:12"),(0,l.kt)("hr",null),(0,l.kt)("h3",{id:"turntocourse"},"TurnToCourse"),(0,l.kt)("p",null,"\u2022 ",(0,l.kt)("strong",{parentName:"p"},"TurnToCourse")," = ",(0,l.kt)("inlineCode",{parentName:"p"},"1")),(0,l.kt)("h4",{id:"defined-in-7"},"Defined in"),(0,l.kt)("p",null,"src/sdk/flightplan/FlightPlanning.ts:13"))}p.isMDXComponent=!0}}]);