"use strict";(self.webpackChunkdocs_api=self.webpackChunkdocs_api||[]).push([[5196],{3905:function(e,t,n){n.d(t,{Zo:function(){return k},kt:function(){return u}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function d(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var o=a.createContext({}),p=function(e){var t=a.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},k=function(e){var t=p(e.components);return a.createElement(o.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,o=e.parentName,k=d(e,["components","mdxType","originalType","parentName"]),m=p(n),u=r,h=m["".concat(o,".").concat(u)]||m[u]||c[u]||i;return n?a.createElement(h,l(l({ref:t},k),{},{components:n})):a.createElement(h,l({ref:t},k))}));function u(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,l=new Array(i);l[0]=m;var d={};for(var o in t)hasOwnProperty.call(t,o)&&(d[o]=t[o]);d.originalType=e,d.mdxType="string"==typeof e?e:r,l[1]=d;for(var p=2;p<i;p++)l[p]=n[p];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},416:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return d},contentTitle:function(){return o},metadata:function(){return p},toc:function(){return k},default:function(){return m}});var a=n(7462),r=n(3366),i=(n(7294),n(3905)),l=["components"],d={id:"FlightPathTurnCalculator",title:"Class: FlightPathTurnCalculator",sidebar_label:"FlightPathTurnCalculator",sidebar_position:0,custom_edit_url:null},o=void 0,p={unversionedId:"framework/classes/FlightPathTurnCalculator",id:"framework/classes/FlightPathTurnCalculator",isDocsHomePage:!1,title:"Class: FlightPathTurnCalculator",description:"A flight path calculator for turns between legs.",source:"@site/docs/framework/classes/FlightPathTurnCalculator.md",sourceDirName:"framework/classes",slug:"/framework/classes/FlightPathTurnCalculator",permalink:"/msfs-avionics-mirror/docs/framework/classes/FlightPathTurnCalculator",editUrl:null,tags:[],version:"current",sidebarPosition:0,frontMatter:{id:"FlightPathTurnCalculator",title:"Class: FlightPathTurnCalculator",sidebar_label:"FlightPathTurnCalculator",sidebar_position:0,custom_edit_url:null},sidebar:"docsSidebar",previous:{title:"FlightPathCalculator",permalink:"/msfs-avionics-mirror/docs/framework/classes/FlightPathCalculator"},next:{title:"FlightPathUtils",permalink:"/msfs-avionics-mirror/docs/framework/classes/FlightPathUtils"}},k=[{value:"Constructors",id:"constructors",children:[{value:"constructor",id:"constructor",children:[],level:3}],level:2},{value:"Properties",id:"properties",children:[{value:"procTurnBuilder",id:"procturnbuilder",children:[{value:"Defined in",id:"defined-in",children:[],level:4}],level:3},{value:"geoCircleCache",id:"geocirclecache",children:[{value:"Defined in",id:"defined-in-1",children:[],level:4}],level:3},{value:"geoPointCache",id:"geopointcache",children:[{value:"Defined in",id:"defined-in-2",children:[],level:4}],level:3},{value:"intersectionGeoPointArrayCache",id:"intersectiongeopointarraycache",children:[{value:"Defined in",id:"defined-in-3",children:[],level:4}],level:3},{value:"intersectionVecArrayCache",id:"intersectionvecarraycache",children:[{value:"Defined in",id:"defined-in-4",children:[],level:4}],level:3},{value:"setAnticipatedTurnCache",id:"setanticipatedturncache",children:[{value:"Type declaration",id:"type-declaration",children:[],level:4},{value:"Defined in",id:"defined-in-5",children:[],level:4}],level:3},{value:"vector3Cache",id:"vector3cache",children:[{value:"Defined in",id:"defined-in-6",children:[],level:4}],level:3}],level:2},{value:"Methods",id:"methods",children:[{value:"computeArcTrackTurn",id:"computearctrackturn",children:[{value:"Parameters",id:"parameters",children:[],level:4},{value:"Returns",id:"returns",children:[],level:4},{value:"Defined in",id:"defined-in-7",children:[],level:4}],level:3},{value:"computeTrackTrackCourseReversal",id:"computetracktrackcoursereversal",children:[{value:"Parameters",id:"parameters-1",children:[],level:4},{value:"Returns",id:"returns-1",children:[],level:4},{value:"Defined in",id:"defined-in-8",children:[],level:4}],level:3},{value:"computeTrackTrackTurn",id:"computetracktrackturn",children:[{value:"Parameters",id:"parameters-2",children:[],level:4},{value:"Returns",id:"returns-2",children:[],level:4},{value:"Defined in",id:"defined-in-9",children:[],level:4}],level:3},{value:"computeTurns",id:"computeturns",children:[{value:"Parameters",id:"parameters-3",children:[],level:4},{value:"Returns",id:"returns-3",children:[],level:4},{value:"Defined in",id:"defined-in-10",children:[],level:4}],level:3},{value:"setAnticipatedTurn",id:"setanticipatedturn",children:[{value:"Parameters",id:"parameters-4",children:[],level:4},{value:"Returns",id:"returns-4",children:[],level:4},{value:"Defined in",id:"defined-in-11",children:[],level:4}],level:3},{value:"setEmptyTurn",id:"setemptyturn",children:[{value:"Parameters",id:"parameters-5",children:[],level:4},{value:"Returns",id:"returns-5",children:[],level:4},{value:"Defined in",id:"defined-in-12",children:[],level:4}],level:3}],level:2}],c={toc:k};function m(e){var t=e.components,n=(0,r.Z)(e,l);return(0,i.kt)("wrapper",(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"A flight path calculator for turns between legs."),(0,i.kt)("h2",{id:"constructors"},"Constructors"),(0,i.kt)("h3",{id:"constructor"},"constructor"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("strong",{parentName:"p"},"new FlightPathTurnCalculator"),"()"),(0,i.kt)("h2",{id:"properties"},"Properties"),(0,i.kt)("h3",{id:"procturnbuilder"},"procTurnBuilder"),(0,i.kt)("p",null,"\u2022 ",(0,i.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,i.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,i.kt)("strong",{parentName:"p"},"procTurnBuilder"),": ",(0,i.kt)("a",{parentName:"p",href:"ProcedureTurnBuilder"},(0,i.kt)("inlineCode",{parentName:"a"},"ProcedureTurnBuilder"))),(0,i.kt)("h4",{id:"defined-in"},"Defined in"),(0,i.kt)("p",null,"src/sdk/flightplan/FlightPathTurnCalculator.ts:19"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"geocirclecache"},"geoCircleCache"),(0,i.kt)("p",null,"\u25aa ",(0,i.kt)("inlineCode",{parentName:"p"},"Static")," ",(0,i.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,i.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,i.kt)("strong",{parentName:"p"},"geoCircleCache"),": ",(0,i.kt)("a",{parentName:"p",href:"GeoCircle"},(0,i.kt)("inlineCode",{parentName:"a"},"GeoCircle")),"[]"),(0,i.kt)("h4",{id:"defined-in-1"},"Defined in"),(0,i.kt)("p",null,"src/sdk/flightplan/FlightPathTurnCalculator.ts:12"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"geopointcache"},"geoPointCache"),(0,i.kt)("p",null,"\u25aa ",(0,i.kt)("inlineCode",{parentName:"p"},"Static")," ",(0,i.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,i.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,i.kt)("strong",{parentName:"p"},"geoPointCache"),": ",(0,i.kt)("a",{parentName:"p",href:"GeoPoint"},(0,i.kt)("inlineCode",{parentName:"a"},"GeoPoint")),"[]"),(0,i.kt)("h4",{id:"defined-in-2"},"Defined in"),(0,i.kt)("p",null,"src/sdk/flightplan/FlightPathTurnCalculator.ts:11"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"intersectiongeopointarraycache"},"intersectionGeoPointArrayCache"),(0,i.kt)("p",null,"\u25aa ",(0,i.kt)("inlineCode",{parentName:"p"},"Static")," ",(0,i.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,i.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,i.kt)("strong",{parentName:"p"},"intersectionGeoPointArrayCache"),": ",(0,i.kt)("a",{parentName:"p",href:"GeoPoint"},(0,i.kt)("inlineCode",{parentName:"a"},"GeoPoint")),"[]"),(0,i.kt)("h4",{id:"defined-in-3"},"Defined in"),(0,i.kt)("p",null,"src/sdk/flightplan/FlightPathTurnCalculator.ts:17"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"intersectionvecarraycache"},"intersectionVecArrayCache"),(0,i.kt)("p",null,"\u25aa ",(0,i.kt)("inlineCode",{parentName:"p"},"Static")," ",(0,i.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,i.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,i.kt)("strong",{parentName:"p"},"intersectionVecArrayCache"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"Float64Array"),"[]"),(0,i.kt)("h4",{id:"defined-in-4"},"Defined in"),(0,i.kt)("p",null,"src/sdk/flightplan/FlightPathTurnCalculator.ts:16"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"setanticipatedturncache"},"setAnticipatedTurnCache"),(0,i.kt)("p",null,"\u25aa ",(0,i.kt)("inlineCode",{parentName:"p"},"Static")," ",(0,i.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,i.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,i.kt)("strong",{parentName:"p"},"setAnticipatedTurnCache"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"Object")),(0,i.kt)("h4",{id:"type-declaration"},"Type declaration"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"geoCircle")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"GeoCircle"},(0,i.kt)("inlineCode",{parentName:"a"},"GeoCircle")),"[]")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"geoPoint")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"GeoPoint"},(0,i.kt)("inlineCode",{parentName:"a"},"GeoPoint")),"[]")))),(0,i.kt)("h4",{id:"defined-in-5"},"Defined in"),(0,i.kt)("p",null,"src/sdk/flightplan/FlightPathTurnCalculator.ts:538"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"vector3cache"},"vector3Cache"),(0,i.kt)("p",null,"\u25aa ",(0,i.kt)("inlineCode",{parentName:"p"},"Static")," ",(0,i.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,i.kt)("inlineCode",{parentName:"p"},"Readonly")," ",(0,i.kt)("strong",{parentName:"p"},"vector3Cache"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"Float64Array"),"[]"),(0,i.kt)("h4",{id:"defined-in-6"},"Defined in"),(0,i.kt)("p",null,"src/sdk/flightplan/FlightPathTurnCalculator.ts:10"),(0,i.kt)("h2",{id:"methods"},"Methods"),(0,i.kt)("h3",{id:"computearctrackturn"},"computeArcTrackTurn"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,i.kt)("strong",{parentName:"p"},"computeArcTrackTurn"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"legs"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"fromIndex"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"toIndex"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"arc"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"track"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"isArcFirst"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"desiredTurnRadius"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"number")),(0,i.kt)("p",null,"Calculates a leg to leg turn between an arc vector and a track vector."),(0,i.kt)("h4",{id:"parameters"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"legs")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"../interfaces/LegDefinition"},(0,i.kt)("inlineCode",{parentName:"a"},"LegDefinition")),"[]"),(0,i.kt)("td",{parentName:"tr",align:"left"},"The sequence of legs to which the turn belongs.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"fromIndex")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The index of the leg on which the turn begins.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"toIndex")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The index of the leg on which the turn ends.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"arc")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"../interfaces/CircleVector"},(0,i.kt)("inlineCode",{parentName:"a"},"CircleVector"))),(0,i.kt)("td",{parentName:"tr",align:"left"},"The arc vector.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"track")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"../interfaces/CircleVector"},(0,i.kt)("inlineCode",{parentName:"a"},"CircleVector"))),(0,i.kt)("td",{parentName:"tr",align:"left"},"The track vector.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"isArcFirst")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"boolean")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Whether the arc vector precedes the track vector (i.e. whether the arc vector is the vector on which the turn begins).")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"desiredTurnRadius")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The desired turn radius, in meters.")))),(0,i.kt)("h4",{id:"returns"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"number")),(0,i.kt)("p",null,"the index of the last leg in the sequence for which a turn ending on that leg was computed."),(0,i.kt)("h4",{id:"defined-in-7"},"Defined in"),(0,i.kt)("p",null,"src/sdk/flightplan/FlightPathTurnCalculator.ts:296"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"computetracktrackcoursereversal"},"computeTrackTrackCourseReversal"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,i.kt)("strong",{parentName:"p"},"computeTrackTrackCourseReversal"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"legs"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"fromIndex"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"toIndex"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"fromTrack"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"toTrack"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"fromTrackBearing"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"toTrackBearing"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"desiredTurnRadius"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"number")),(0,i.kt)("p",null,"Computes a leg-to-leg course reversal."),(0,i.kt)("h4",{id:"parameters-1"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"legs")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"../interfaces/LegDefinition"},(0,i.kt)("inlineCode",{parentName:"a"},"LegDefinition")),"[]"),(0,i.kt)("td",{parentName:"tr",align:"left"},"The sequence of legs to which the turn belongs.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"fromIndex")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The index of the leg on which the turn begins.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"toIndex")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The index of the leg on which the turn ends.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"fromTrack")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"../interfaces/CircleVector"},(0,i.kt)("inlineCode",{parentName:"a"},"CircleVector"))),(0,i.kt)("td",{parentName:"tr",align:"left"},"The track vector on which the turn begins.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"toTrack")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"../interfaces/CircleVector"},(0,i.kt)("inlineCode",{parentName:"a"},"CircleVector"))),(0,i.kt)("td",{parentName:"tr",align:"left"},"The track vector on which the turn ends.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"fromTrackBearing")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The true course bearing of the track vector on which the turn begins, at the end of the vector.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"toTrackBearing")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The true course bearing of the track vector on which the turn ends, at the beginning of the vector.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"desiredTurnRadius")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The desired turn radius, in meters.")))),(0,i.kt)("h4",{id:"returns-1"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"number")),(0,i.kt)("p",null,"The index of the last leg in the sequence for which a turn ending on that leg was computed."),(0,i.kt)("h4",{id:"defined-in-8"},"Defined in"),(0,i.kt)("p",null,"src/sdk/flightplan/FlightPathTurnCalculator.ts:221"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"computetracktrackturn"},"computeTrackTrackTurn"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,i.kt)("strong",{parentName:"p"},"computeTrackTrackTurn"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"legs"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"fromIndex"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"toIndex"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"fromTrack"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"toTrack"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"desiredTurnRadius"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"isRestrictedByPrevTurn"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"previousTanTheta?"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"number")),(0,i.kt)("p",null,"Calculates a leg-to-leg turn between two track vectors."),(0,i.kt)("h4",{id:"parameters-2"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"legs")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"../interfaces/LegDefinition"},(0,i.kt)("inlineCode",{parentName:"a"},"LegDefinition")),"[]"),(0,i.kt)("td",{parentName:"tr",align:"left"},"The sequence of legs to which the turn belongs.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"fromIndex")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The index of the leg on which the turn begins.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"toIndex")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The index of the leg on which the turn ends.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"fromTrack")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"../interfaces/CircleVector"},(0,i.kt)("inlineCode",{parentName:"a"},"CircleVector"))),(0,i.kt)("td",{parentName:"tr",align:"left"},"The track vector on which the turn begins.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"toTrack")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"../interfaces/CircleVector"},(0,i.kt)("inlineCode",{parentName:"a"},"CircleVector"))),(0,i.kt)("td",{parentName:"tr",align:"left"},"The track vector on which the turn ends.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"desiredTurnRadius")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The desired turn radius, in meters.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"isRestrictedByPrevTurn")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"boolean")),(0,i.kt)("td",{parentName:"tr",align:"left"},"Whether turn anticipation is restricted by the previous leg-to-leg turn. If ",(0,i.kt)("inlineCode",{parentName:"td"},"true"),", turn anticipation will be restricted so that the turn does not overlap the previous turn if they share a common flight path vector.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"previousTanTheta?")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The tangent of the theta value of the previous turn. Theta is defined as the (acute) angle between either ",(0,i.kt)("inlineCode",{parentName:"td"},"fromTrack")," or ",(0,i.kt)("inlineCode",{parentName:"td"},"toTrack")," and the great circle passing through the turn vertex (where the two tracks meet) and the center of the turn. If this value is defined and ",(0,i.kt)("inlineCode",{parentName:"td"},"isRestrictedByPrevTurn")," is ",(0,i.kt)("inlineCode",{parentName:"td"},"true"),", the anticipation of both turns will be adjusted if necessary such that the turns do not overlap if they share a common flight path vector. If the value is undefined, the anticipation of the current turn will be restricted by the previous turn, if necessary, without changing the anticipation of the previous turn.")))),(0,i.kt)("h4",{id:"returns-2"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"number")),(0,i.kt)("p",null,"The index of the last leg in the sequence for which a turn ending on that leg was computed."),(0,i.kt)("h4",{id:"defined-in-9"},"Defined in"),(0,i.kt)("p",null,"src/sdk/flightplan/FlightPathTurnCalculator.ts:89"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"computeturns"},"computeTurns"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("strong",{parentName:"p"},"computeTurns"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"legs"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"startIndex"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"count"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"desiredTurnRadius"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("p",null,"Computes leg to leg turns for a given sequence of legs. Turns will only be calculated between legs with defined\nflight path vectors and no pre-existing egress/ingress transition (unless it is a leg-to-leg turn) at the junction\nof the turn."),(0,i.kt)("h4",{id:"parameters-3"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"legs")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"../interfaces/LegDefinition"},(0,i.kt)("inlineCode",{parentName:"a"},"LegDefinition")),"[]"),(0,i.kt)("td",{parentName:"tr",align:"left"},"A sequence of legs.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"startIndex")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The index of the first leg for which to compute turns.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"count")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The total number of legs for which to compute turns.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"desiredTurnRadius")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The desired turn radius, in meters.")))),(0,i.kt)("h4",{id:"returns-3"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"defined-in-10"},"Defined in"),(0,i.kt)("p",null,"src/sdk/flightplan/FlightPathTurnCalculator.ts:30"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"setanticipatedturn"},"setAnticipatedTurn"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,i.kt)("strong",{parentName:"p"},"setAnticipatedTurn"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"fromLegCalc"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"toLegCalc"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"direction"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"radius"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"center"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"start"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"middle"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"end"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("p",null,"Adds flight path vectors to a pair of legs for an anticipated leg to leg turn."),(0,i.kt)("h4",{id:"parameters-4"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"fromLegCalc")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"../interfaces/LegCalculations"},(0,i.kt)("inlineCode",{parentName:"a"},"LegCalculations"))),(0,i.kt)("td",{parentName:"tr",align:"left"},"The calculations for the leg on which the turn begins.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"toLegCalc")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"../interfaces/LegCalculations"},(0,i.kt)("inlineCode",{parentName:"a"},"LegCalculations"))),(0,i.kt)("td",{parentName:"tr",align:"left"},"The calculations for the leg on which the turn ends.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"direction")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"../modules#vectorturndirection"},(0,i.kt)("inlineCode",{parentName:"a"},"VectorTurnDirection"))),(0,i.kt)("td",{parentName:"tr",align:"left"},"The direction of the turn.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"radius")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"number")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The radius of the turn, in meters.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"center")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"../interfaces/LatLonInterface"},(0,i.kt)("inlineCode",{parentName:"a"},"LatLonInterface"))," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},"Float64Array")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The location of the center of the turn.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"start")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"../interfaces/LatLonInterface"},(0,i.kt)("inlineCode",{parentName:"a"},"LatLonInterface"))," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},"Float64Array")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The location of the start of the turn.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"middle")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"../interfaces/LatLonInterface"},(0,i.kt)("inlineCode",{parentName:"a"},"LatLonInterface"))," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},"Float64Array")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The location of the midpoint of the turn.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"end")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"../interfaces/LatLonInterface"},(0,i.kt)("inlineCode",{parentName:"a"},"LatLonInterface"))," ","|"," ",(0,i.kt)("inlineCode",{parentName:"td"},"Float64Array")),(0,i.kt)("td",{parentName:"tr",align:"left"},"The location of the end of the turn.")))),(0,i.kt)("h4",{id:"returns-4"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"defined-in-11"},"Defined in"),(0,i.kt)("p",null,"src/sdk/flightplan/FlightPathTurnCalculator.ts:554"),(0,i.kt)("hr",null),(0,i.kt)("h3",{id:"setemptyturn"},"setEmptyTurn"),(0,i.kt)("p",null,"\u25b8 ",(0,i.kt)("inlineCode",{parentName:"p"},"Private")," ",(0,i.kt)("strong",{parentName:"p"},"setEmptyTurn"),"(",(0,i.kt)("inlineCode",{parentName:"p"},"fromLegCalc"),", ",(0,i.kt)("inlineCode",{parentName:"p"},"toLegCalc"),"): ",(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("p",null,"Removes all ingress and egress flight path vectors from a pair of legs at their junction."),(0,i.kt)("h4",{id:"parameters-5"},"Parameters"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,i.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"fromLegCalc")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"../interfaces/LegCalculations"},(0,i.kt)("inlineCode",{parentName:"a"},"LegCalculations"))),(0,i.kt)("td",{parentName:"tr",align:"left"},"The calculations for the leg on which the turn begins.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("inlineCode",{parentName:"td"},"toLegCalc")),(0,i.kt)("td",{parentName:"tr",align:"left"},(0,i.kt)("a",{parentName:"td",href:"../interfaces/LegCalculations"},(0,i.kt)("inlineCode",{parentName:"a"},"LegCalculations"))),(0,i.kt)("td",{parentName:"tr",align:"left"},"The calculations for the leg on which the turn ends.")))),(0,i.kt)("h4",{id:"returns-5"},"Returns"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"void")),(0,i.kt)("h4",{id:"defined-in-12"},"Defined in"),(0,i.kt)("p",null,"src/sdk/flightplan/FlightPathTurnCalculator.ts:531"))}m.isMDXComponent=!0}}]);